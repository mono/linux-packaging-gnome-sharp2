<?xml version="1.0"?>
<api>
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Gnome" library="gnome-2">
    <enum name="FileDomain" cname="GnomeFileDomain" gtype="gnome_file_domain_get_type" type="enum">
      <member cname="GNOME_FILE_DOMAIN_UNKNOWN" name="Unknown" />
      <member cname="GNOME_FILE_DOMAIN_LIBDIR" name="Libdir" />
      <member cname="GNOME_FILE_DOMAIN_DATADIR" name="Datadir" />
      <member cname="GNOME_FILE_DOMAIN_SOUND" name="Sound" />
      <member cname="GNOME_FILE_DOMAIN_PIXMAP" name="Pixmap" />
      <member cname="GNOME_FILE_DOMAIN_CONFIG" name="Config" />
      <member cname="GNOME_FILE_DOMAIN_HELP" name="Help" />
      <member cname="GNOME_FILE_DOMAIN_APP_LIBDIR" name="AppLibdir" />
      <member cname="GNOME_FILE_DOMAIN_APP_DATADIR" name="AppDatadir" />
      <member cname="GNOME_FILE_DOMAIN_APP_SOUND" name="AppSound" />
      <member cname="GNOME_FILE_DOMAIN_APP_PIXMAP" name="AppPixmap" />
      <member cname="GNOME_FILE_DOMAIN_APP_CONFIG" name="AppConfig" />
      <member cname="GNOME_FILE_DOMAIN_APP_HELP" name="AppHelp" />
    </enum>
    <enum name="HelpError" cname="GnomeHelpError" gtype="gnome_help_error_get_type" type="enum">
      <member cname="GNOME_HELP_ERROR_INTERNAL" name="Internal" />
      <member cname="GNOME_HELP_ERROR_NOT_FOUND" name="NotFound" />
    </enum>
    <enum name="TriggerType" cname="GnomeTriggerType" gtype="gnome_trigger_type_get_type" type="enum">
      <member cname="GTRIG_NONE" name="None" />
      <member cname="GTRIG_FUNCTION" name="Function" />
      <member cname="GTRIG_COMMAND" name="Command" />
      <member cname="GTRIG_MEDIAPLAY" name="Mediaplay" />
    </enum>
    <enum name="URLError" cname="GnomeURLError" type="enum">
      <member cname="GNOME_URL_ERROR_PARSE" name="Parse" />
      <member cname="GNOME_URL_ERROR_LAUNCH" name="Launch" />
      <member cname="GNOME_URL_ERROR_URL" name="Url" />
      <member cname="GNOME_URL_ERROR_NO_DEFAULT" name="NoDefault" />
      <member cname="GNOME_URL_ERROR_NOT_SUPPORTED" name="NotSupported" />
      <member cname="GNOME_URL_ERROR_VFS" name="Vfs" />
      <member cname="GNOME_URL_ERROR_CANCELLED" name="Cancelled" />
    </enum>
    <callback name="ModuleClassInitHook" cname="GnomeModuleClassInitHook">
      <return-type type="void" />
      <parameters>
        <parameter type="GnomeProgramClass*" name="klass" />
        <parameter type="const-GnomeModuleInfo*" name="mod_info" />
      </parameters>
    </callback>
    <callback name="ModuleGetGOptionGroupFunc" cname="GnomeModuleGetGOptionGroupFunc">
      <return-type type="GOptionGroup*" />
    </callback>
    <callback name="ModuleHook" cname="GnomeModuleHook">
      <return-type type="void" />
      <parameters>
        <parameter type="GnomeProgram*" name="program" />
        <parameter type="GnomeModuleInfo*" name="mod_info" />
      </parameters>
    </callback>
    <callback name="ModuleInitHook" cname="GnomeModuleInitHook">
      <return-type type="void" />
      <parameters>
        <parameter type="const-GnomeModuleInfo*" name="mod_info" />
      </parameters>
    </callback>
    <callback name="TriggerActionFunction" cname="GnomeTriggerActionFunction">
      <return-type type="void" />
      <parameters>
        <parameter type="char*" name="msg" />
        <parameter type="char*" name="level" />
        <parameter type="char*" array="true" name="supinfo" />
      </parameters>
    </callback>
    <object name="Program" cname="GnomeProgram" parent="GObject">
      <field name="Priv" cname="_priv" type="GnomeProgramPrivate*" />
      <property name="PoptTable" cname="popt-table" type="gpointer" writeable="true" construct-only="true" />
      <property name="PoptFlags" cname="popt-flags" type="gint" writeable="true" construct-only="true" />
      <property name="PoptContext" cname="popt-context" type="gpointer" readable="true" />
      <property name="GoptionContext" cname="goption-context" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="HumanReadableName" cname="human-readable-name" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="GnomePath" cname="gnome-path" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="AppId" cname="app-id" type="gchar*" readable="true" />
      <property name="AppVersion" cname="app-version" type="gchar*" readable="true" />
      <property name="GnomePrefix" cname="gnome-prefix" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="GnomeLibdir" cname="gnome-libdir" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="GnomeDatadir" cname="gnome-datadir" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="GnomeSysconfdir" cname="gnome-sysconfdir" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="AppPrefix" cname="app-prefix" type="gchar*" readable="true" writeable="true" />
      <property name="AppLibdir" cname="app-libdir" type="gchar*" readable="true" writeable="true" />
      <property name="AppDatadir" cname="app-datadir" type="gchar*" readable="true" writeable="true" />
      <property name="AppSysconfdir" cname="app-sysconfdir" type="gchar*" readable="true" writeable="true" />
      <property name="CreateDirectories" cname="create-directories" type="gboolean" readable="true" writeable="true" construct-only="true" />
      <property name="EnableSound" cname="enable-sound" type="gboolean" readable="true" writeable="true" />
      <property name="Espeaker" cname="espeaker" type="gchar*" readable="true" writeable="true" />
      <method name="Get" cname="gnome_program_get" shared="true">
        <return-type type="GnomeProgram*" />
      </method>
      <method name="GetAppId" cname="gnome_program_get_app_id">
        <return-type type="const-char*" />
      </method>
      <method name="GetAppVersion" cname="gnome_program_get_app_version">
        <return-type type="const-char*" />
      </method>
      <method name="GetHumanReadableName" cname="gnome_program_get_human_readable_name">
        <return-type type="const-char*" />
      </method>
      <method name="GetType" cname="gnome_program_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Init" cname="gnome_program_init" shared="true">
        <return-type type="GnomeProgram*" />
        <parameters>
          <parameter type="const-char*" name="app_id" />
          <parameter type="const-char*" name="app_version" />
          <parameter type="const-GnomeModuleInfo*" name="module_info" />
          <parameter type="int" name="argc" />
          <parameter type="char**" name="argv" />
          <parameter type="const-char*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="InitParamv" cname="gnome_program_init_paramv" shared="true">
        <return-type type="GnomeProgram*" />
        <parameters>
          <parameter type="GType" name="type" />
          <parameter type="const-char*" name="app_id" />
          <parameter type="const-char*" name="app_version" />
          <parameter type="const-GnomeModuleInfo*" name="module_info" />
          <parameter type="int" name="argc" />
          <parameter type="char**" name="argv" />
          <parameter type="guint" name="nparams" />
          <parameter type="GParameter*" name="params" />
        </parameters>
      </method>
      <method name="Initv" cname="gnome_program_initv" shared="true">
        <return-type type="GnomeProgram*" />
        <parameters>
          <parameter type="GType" name="type" />
          <parameter type="const-char*" name="app_id" />
          <parameter type="const-char*" name="app_version" />
          <parameter type="const-GnomeModuleInfo*" name="module_info" />
          <parameter type="int" name="argc" />
          <parameter type="char**" name="argv" />
          <parameter type="const-char*" name="first_property_name" />
          <parameter type="va_list" name="args" />
        </parameters>
      </method>
      <method name="InstallProperty" cname="gnome_program_install_property" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GnomeProgramClass*" name="pclass" />
          <parameter type="GObjectGetPropertyFunc" name="get_fn" />
          <parameter type="GObjectSetPropertyFunc" name="set_fn" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </method>
      <method name="LocateFile" cname="gnome_program_locate_file">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GnomeFileDomain" name="domain" />
          <parameter type="const-gchar*" name="file_name" />
          <parameter type="gboolean" name="only_if_exists" />
          <parameter type="GSList**" name="ret_locations" />
        </parameters>
      </method>
      <method name="ModuleLoad" cname="gnome_program_module_load" shared="true">
        <return-type type="const-GnomeModuleInfo*" />
        <parameters>
          <parameter type="const-char*" name="mod_name" />
        </parameters>
      </method>
      <method name="ModuleRegister" cname="gnome_program_module_register" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GnomeModuleInfo*" name="module_info" />
        </parameters>
      </method>
      <method name="ModuleRegistered" cname="gnome_program_module_registered" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GnomeModuleInfo*" name="module_info" />
        </parameters>
      </method>
      <method name="ParseArgs" cname="gnome_program_parse_args" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Postinit" cname="gnome_program_postinit" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Preinit" cname="gnome_program_preinit" deprecated="1">
        <return-type type="poptContext" />
        <parameters>
          <parameter type="const-char*" name="app_id" />
          <parameter type="const-char*" name="app_version" />
          <parameter type="int" name="argc" />
          <parameter type="char**" name="argv" />
        </parameters>
      </method>
    </object>
    <boxed name="ModuleInfo" cname="GnomeModuleInfo">
      <field name="Name" cname="name" type="const-char*" />
      <field name="Version" cname="version" type="const-char*" />
      <field name="Description" cname="description" type="const-char*" />
      <field name="Requirements" cname="requirements" type="GnomeModuleRequirement*" />
      <field name="InstanceInit" cname="instance_init" type="GnomeModuleHook" />
      <field name="PreArgsParse" cname="pre_args_parse" type="GnomeModuleHook" />
      <field name="PostArgsParse" cname="post_args_parse" type="GnomeModuleHook" />
      <field name="Options" cname="_options" type="void*" />
      <field name="Options" cname="options" type="struct-poptOption*" />
      <field name="InitPass" cname="init_pass" type="GnomeModuleInitHook" />
      <field name="ClassInit" cname="class_init" type="GnomeModuleClassInitHook" />
      <field name="OptPrefix" cname="opt_prefix" type="const-char*" />
      <field name="GetGoptionGroupFunc" cname="get_goption_group_func" type="GnomeModuleGetGOptionGroupFunc" />
      <method name="GetType" cname="gnome_module_info_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="ModuleRequirement" cname="GnomeModuleRequirement">
      <field name="RequiredVersion" cname="required_version" type="const-char*" />
      <field name="ModuleInfo" cname="module_info" type="const-GnomeModuleInfo*" />
    </struct>
    <struct name="Trigger" cname="GnomeTrigger">
      <field name="Type" cname="type" type="GnomeTriggerType" />
      <field name="Function" cname="function" type="GnomeTriggerActionFunction" />
      <field name="Level" cname="level" type="gchar*" />
    </struct>
    <struct name="TriggerList" cname="GnomeTriggerList">
      <field name="Nodename" cname="nodename" type="char*" />
      <field name="Subtrees" cname="subtrees" type="GnomeTriggerList**" />
      <field name="Actions" cname="actions" type="GnomeTrigger**" />
      <field name="Numsubtrees" cname="numsubtrees" type="gint" />
      <field name="Numactions" cname="numactions" type="gint" />
    </struct>
    <class name="Global" cname="GnomeGlobal">
      <method name="BonoboModuleInfoGet" cname="gnome_bonobo_module_info_get" shared="true">
        <return-type type="const-GnomeModuleInfo*" />
      </method>
      <method name="ExecuteAsync" cname="gnome_execute_async" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="dir" />
          <parameter type="int" name="argc" />
          <parameter type="char*" array="true" name="argv" />
        </parameters>
      </method>
      <method name="ExecuteAsyncFds" cname="gnome_execute_async_fds" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="dir" />
          <parameter type="int" name="argc" />
          <parameter type="char*" array="true" name="argv" />
          <parameter type="gboolean" name="close_fds" />
        </parameters>
      </method>
      <method name="ExecuteAsyncWithEnv" cname="gnome_execute_async_with_env" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="dir" />
          <parameter type="int" name="argc" />
          <parameter type="char*" array="true" name="argv" />
          <parameter type="int" name="envc" />
          <parameter type="char*" array="true" name="envv" />
        </parameters>
      </method>
      <method name="ExecuteAsyncWithEnvFds" cname="gnome_execute_async_with_env_fds" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="dir" />
          <parameter type="int" name="argc" />
          <parameter type="char*" array="true" name="argv" />
          <parameter type="int" name="envc" />
          <parameter type="char*" array="true" name="envv" />
          <parameter type="gboolean" name="close_fds" />
        </parameters>
      </method>
      <method name="ExecuteShell" cname="gnome_execute_shell" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="dir" />
          <parameter type="const-char*" name="commandline" />
        </parameters>
      </method>
      <method name="ExecuteShellFds" cname="gnome_execute_shell_fds" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="dir" />
          <parameter type="const-char*" name="commandline" />
          <parameter type="gboolean" name="close_fds" />
        </parameters>
      </method>
      <method name="ExecuteTerminalShell" cname="gnome_execute_terminal_shell" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="dir" />
          <parameter type="const-char*" name="commandline" />
        </parameters>
      </method>
      <method name="ExecuteTerminalShellFds" cname="gnome_execute_terminal_shell_fds" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="dir" />
          <parameter type="const-char*" name="commandline" />
          <parameter type="gboolean" name="close_fds" />
        </parameters>
      </method>
      <method name="PrependTerminalToVector" cname="gnome_prepend_terminal_to_vector" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
        </parameters>
      </method>
      <method name="UtilUserShell" cname="gnome_util_user_shell" shared="true">
        <return-type type="char*" />
      </method>
    </class>
    <class name="Config" cname="GnomeConfig_">
      <method name="AssembleVector" cname="gnome_config_assemble_vector" deprecated="1" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="int" name="argc" />
          <parameter type="const-char*" name="argv" />
        </parameters>
      </method>
      <method name="CleanFile_" cname="gnome_config_clean_file_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="CleanKey_" cname="gnome_config_clean_key_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="CleanSection_" cname="gnome_config_clean_section_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="DropAll" cname="gnome_config_drop_all" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="DropFile_" cname="gnome_config_drop_file_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="GetBoolWithDefault_" cname="gnome_config_get_bool_with_default_" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean*" name="def" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="GetFloatWithDefault_" cname="gnome_config_get_float_with_default_" deprecated="1" shared="true">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean*" name="def" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="GetIntWithDefault_" cname="gnome_config_get_int_with_default_" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean*" name="def" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="GetStringWithDefault_" cname="gnome_config_get_string_with_default_" deprecated="1" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean*" name="def" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="GetTranslatedStringWithDefault_" cname="gnome_config_get_translated_string_with_default_" deprecated="1" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean*" name="def" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="GetVectorWithDefault_" cname="gnome_config_get_vector_with_default_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gint*" name="argcp" />
          <parameter type="char***" name="argvp" />
          <parameter type="gboolean*" name="def" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="HasSection_" cname="gnome_config_has_section_" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="InitIterator_" cname="gnome_config_init_iterator_" deprecated="1" shared="true">
        <return-type type="void*" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="InitIteratorSections_" cname="gnome_config_init_iterator_sections_" deprecated="1" shared="true">
        <return-type type="void*" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="IteratorNext" cname="gnome_config_iterator_next" deprecated="1" shared="true">
        <return-type type="void*" />
        <parameters>
          <parameter type="void*" name="iterator_handle" />
          <parameter type="char**" name="key" />
          <parameter type="char**" name="value" />
        </parameters>
      </method>
      <method name="MakeVector" cname="gnome_config_make_vector" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="string" />
          <parameter type="int*" name="argcp" />
          <parameter type="char***" name="argvp" />
        </parameters>
      </method>
      <method name="PopPrefix" cname="gnome_config_pop_prefix" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="PushPrefix" cname="gnome_config_push_prefix" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
        </parameters>
      </method>
      <method name="SetBool_" cname="gnome_config_set_bool_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gboolean" name="value" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="SetFloat_" cname="gnome_config_set_float_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="gdouble" name="value" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="SetInt_" cname="gnome_config_set_int_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="int" name="value" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="SetSetHandler" cname="gnome_config_set_set_handler" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="(*func)(void*" />
          <parameter type="void*" name="data" />
        </parameters>
      </method>
      <method name="SetString_" cname="gnome_config_set_string_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="const-char*" name="value" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="SetSyncHandler" cname="gnome_config_set_sync_handler" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="(*func)(void*" />
          <parameter type="void*" name="data" />
        </parameters>
      </method>
      <method name="SetTranslatedString_" cname="gnome_config_set_translated_string_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="const-char*" name="value" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="SetVector_" cname="gnome_config_set_vector_" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
          <parameter type="int" name="argc" />
          <parameter type="const-char*" array="true" name="argv" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
      <method name="Sync" cname="gnome_config_sync" deprecated="1" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="SyncFile_" cname="gnome_config_sync_file_" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="char*" name="path" />
          <parameter type="gboolean" name="priv" />
        </parameters>
      </method>
    </class>
    <class name="Gconf" cname="GnomeGconf_">
      <method name="GetAppSettingsRelative" cname="gnome_gconf_get_app_settings_relative" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GnomeProgram*" name="program" />
          <parameter type="const-gchar*" name="subkey" />
        </parameters>
      </method>
      <method name="GetGnomeLibsSettingsRelative" cname="gnome_gconf_get_gnome_libs_settings_relative" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="subkey" />
        </parameters>
      </method>
    </class>
    <class name="Help" cname="GnomeHelp_">
      <method name="Display" cname="gnome_help_display" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="file_name" />
          <parameter type="const-char*" name="link_id" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayDesktop" cname="gnome_help_display_desktop" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeProgram*" name="program" />
          <parameter type="const-char*" name="doc_id" />
          <parameter type="const-char*" name="file_name" />
          <parameter type="const-char*" name="link_id" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayDesktopWithEnv" cname="gnome_help_display_desktop_with_env" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeProgram*" name="program" />
          <parameter type="const-char*" name="doc_id" />
          <parameter type="const-char*" name="file_name" />
          <parameter type="const-char*" name="link_id" />
          <parameter type="char**" name="envp" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayUri" cname="gnome_help_display_uri" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="help_uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayUriWithEnv" cname="gnome_help_display_uri_with_env" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="help_uri" />
          <parameter type="char**" name="envp" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayWithDocId" cname="gnome_help_display_with_doc_id" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeProgram*" name="program" />
          <parameter type="const-char*" name="doc_id" />
          <parameter type="const-char*" name="file_name" />
          <parameter type="const-char*" name="link_id" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayWithDocIdAndEnv" cname="gnome_help_display_with_doc_id_and_env" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeProgram*" name="program" />
          <parameter type="const-char*" name="doc_id" />
          <parameter type="const-char*" name="file_name" />
          <parameter type="const-char*" name="link_id" />
          <parameter type="char**" name="envp" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gnome_help_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
    </class>
    <class name="Score" cname="GnomeScore_">
      <method name="GetNotable" cname="gnome_score_get_notable" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-gchar*" name="gamename" />
          <parameter type="const-gchar*" name="level" />
          <parameter type="gchar***" name="names" />
          <parameter type="gfloat**" name="scores" />
          <parameter type="time_t**" name="scoretimes" />
        </parameters>
      </method>
      <method name="Init" cname="gnome_score_init" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-gchar*" name="gamename" />
        </parameters>
      </method>
      <method name="Log" cname="gnome_score_log" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="gfloat" name="score" />
          <parameter type="const-gchar*" name="level" />
          <parameter type="/*" name="Pass" />
        </parameters>
      </method>
    </class>
    <class name="Sound" cname="GnomeSound_">
      <method name="ConnectionGet" cname="gnome_sound_connection_get" shared="true">
        <return-type type="int" />
      </method>
      <method name="Init" cname="gnome_sound_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="hostname" />
        </parameters>
      </method>
      <method name="Play" cname="gnome_sound_play" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="SampleLoad" cname="gnome_sound_sample_load" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="sample_name" />
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="Shutdown" cname="gnome_sound_shutdown" shared="true">
        <return-type type="void" />
      </method>
    </class>
    <class name="Triggers" cname="GnomeTriggers_">
      <method name="AddTrigger" cname="gnome_triggers_add_trigger" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeTrigger*" name="nt" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="Do" cname="gnome_triggers_do" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="msg" />
          <parameter type="const-char*" name="level" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="VaddTrigger" cname="gnome_triggers_vadd_trigger" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeTrigger*" name="nt" />
          <parameter type="char*" array="true" name="supinfo" />
        </parameters>
      </method>
      <method name="Vdo" cname="gnome_triggers_vdo" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="msg" />
          <parameter type="const-char*" name="level" />
          <parameter type="const-char*" array="true" name="supinfo" />
        </parameters>
      </method>
    </class>
    <class name="Url" cname="GnomeUrl_">
      <method name="ErrorQuark" cname="gnome_url_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="Show" cname="gnome_url_show" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="url" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ShowWithEnv" cname="gnome_url_show_with_env" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="url" />
          <parameter type="char**" name="envp" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </class>
    <class name="User" cname="GnomeUser_">
      <method name="AccelsDirGet" cname="gnome_user_accels_dir_get" shared="true">
        <return-type type="const-char*" />
      </method>
      <method name="DirGet" cname="gnome_user_dir_get" shared="true">
        <return-type type="const-char*" />
      </method>
      <method name="PrivateDirGet" cname="gnome_user_private_dir_get" shared="true">
        <return-type type="const-char*" />
      </method>
    </class>
  </namespace>
  <namespace name="Gnome" library="gnomecanvas-2">
    <object name="Canvas" cname="GnomeCanvas" parent="GtkLayout">
      <field name="Root" cname="root" type="GnomeCanvasItem*" />
      <field name="RedrawArea" cname="redraw_area" type="ArtUta*" />
      <field name="CurrentItem" cname="current_item" type="GnomeCanvasItem*" />
      <field name="NewCurrentItem" cname="new_current_item" type="GnomeCanvasItem*" />
      <field name="GrabbedItem" cname="grabbed_item" type="GnomeCanvasItem*" />
      <field name="FocusedItem" cname="focused_item" type="GnomeCanvasItem*" />
      <field name="PixmapGc" cname="pixmap_gc" type="GdkGC*" />
      <field name="PickEvent" cname="pick_event" type="GdkEvent" />
      <field name="ScrollX1" cname="scroll_x1" type="double" />
      <field name="ScrollY1" cname="scroll_y1" type="double" />
      <field name="ScrollX2" cname="scroll_x2" type="double" />
      <field name="ScrollY2" cname="scroll_y2" type="double" />
      <field name="PixelsPerUnit" cname="pixels_per_unit" type="double" />
      <field name="IdleId" cname="idle_id" type="guint" />
      <field name="RootDestroyId" cname="root_destroy_id" type="guint" />
      <field name="RedrawX1" cname="redraw_x1" type="int" />
      <field name="RedrawY1" cname="redraw_y1" type="int" />
      <field name="RedrawX2" cname="redraw_x2" type="int" />
      <field name="RedrawY2" cname="redraw_y2" type="int" />
      <field name="DrawXofs" cname="draw_xofs" type="int" />
      <field name="DrawYofs" cname="draw_yofs" type="int" />
      <field name="ZoomXofs" cname="zoom_xofs" type="int" />
      <field name="ZoomYofs" cname="zoom_yofs" type="int" />
      <field name="State" cname="state" type="int" />
      <field name="GrabbedEventMask" cname="grabbed_event_mask" type="guint" />
      <field name="CloseEnough" cname="close_enough" type="int" />
      <field name="CenterScrollRegion" cname="center_scroll_region" bits="1" type="unsigned int" />
      <field name="NeedUpdate" cname="need_update" bits="1" type="unsigned int" />
      <field name="NeedRedraw" cname="need_redraw" bits="1" type="unsigned int" />
      <field name="NeedRepick" cname="need_repick" bits="1" type="unsigned int" />
      <field name="LeftGrabbedItem" cname="left_grabbed_item" bits="1" type="unsigned int" />
      <field name="InRepick" cname="in_repick" bits="1" type="unsigned int" />
      <field name="Aa" cname="aa" bits="1" type="unsigned int" />
      <field name="Dither" cname="dither" type="GdkRgbDither" />
      <property name="Aa" cname="aa" type="gboolean" readable="true" writeable="true" construct-only="true" />
      <property name="FocusedItem" cname="focused_item" type="GnomeCanvasItem" readable="true" writeable="true" />
      <signal name="DrawBackground" cname="draw_background" when="LAST" field_name="draw_background">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvas*" name="canvas" />
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </signal>
      <signal name="RenderBackground" cname="render_background" when="LAST" field_name="render_background">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvas*" name="canvas" />
          <parameter type="GnomeCanvasBuf*" name="buf" />
        </parameters>
      </signal>
      <virtual_method name="RequestUpdate" cname="request_update">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvas*" name="canvas" />
        </parameters>
      </virtual_method>
      <method name="C2w" cname="gnome_canvas_c2w">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="cx" />
          <parameter type="int" name="cy" />
          <parameter type="double*" name="wx" />
          <parameter type="double*" name="wy" />
        </parameters>
      </method>
      <method name="CapGdkToArt" cname="gnome_canvas_cap_gdk_to_art" shared="true">
        <return-type type="ArtPathStrokeCapType" />
        <parameters>
          <parameter type="GdkCapStyle" name="gdk_cap" />
        </parameters>
      </method>
      <method name="GetButtPoints" cname="gnome_canvas_get_butt_points" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="x1" />
          <parameter type="double" name="y1" />
          <parameter type="double" name="x2" />
          <parameter type="double" name="y2" />
          <parameter type="double" name="width" />
          <parameter type="int" name="project" />
          <parameter type="double*" name="bx1" />
          <parameter type="double*" name="by1" />
          <parameter type="double*" name="bx2" />
          <parameter type="double*" name="by2" />
        </parameters>
      </method>
      <method name="GetCenterScrollRegion" cname="gnome_canvas_get_center_scroll_region">
        <return-type type="gboolean" />
      </method>
      <method name="GetColor" cname="gnome_canvas_get_color">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="spec" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="GetColorPixel" cname="gnome_canvas_get_color_pixel">
        <return-type type="gulong" />
        <parameters>
          <parameter type="guint" name="rgba" />
        </parameters>
      </method>
      <method name="GetDither" cname="gnome_canvas_get_dither">
        <return-type type="GdkRgbDither" />
      </method>
      <method name="GetItemAt" cname="gnome_canvas_get_item_at">
        <return-type type="GnomeCanvasItem*" />
        <parameters>
          <parameter type="double" name="x" />
          <parameter type="double" name="y" />
        </parameters>
      </method>
      <method name="GetMiterPoints" cname="gnome_canvas_get_miter_points" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="double" name="x1" />
          <parameter type="double" name="y1" />
          <parameter type="double" name="x2" />
          <parameter type="double" name="y2" />
          <parameter type="double" name="x3" />
          <parameter type="double" name="y3" />
          <parameter type="double" name="width" />
          <parameter type="double*" name="mx1" />
          <parameter type="double*" name="my1" />
          <parameter type="double*" name="mx2" />
          <parameter type="double*" name="my2" />
        </parameters>
      </method>
      <method name="GetScrollOffsets" cname="gnome_canvas_get_scroll_offsets">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="cx" />
          <parameter type="int*" name="cy" />
        </parameters>
      </method>
      <method name="GetScrollRegion" cname="gnome_canvas_get_scroll_region">
        <return-type type="void" />
        <parameters>
          <parameter type="double*" name="x1" />
          <parameter type="double*" name="y1" />
          <parameter type="double*" name="x2" />
          <parameter type="double*" name="y2" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_canvas_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="JoinGdkToArt" cname="gnome_canvas_join_gdk_to_art" shared="true">
        <return-type type="ArtPathStrokeJoinType" />
        <parameters>
          <parameter type="GdkJoinStyle" name="gdk_join" />
        </parameters>
      </method>
      <constructor cname="gnome_canvas_new" />
      <constructor cname="gnome_canvas_new_aa" />
      <method name="RenderSvp" cname="gnome_canvas_render_svp" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasBuf*" name="buf" />
          <parameter type="ArtSVP*" name="svp" />
          <parameter type="guint32" name="rgba" />
        </parameters>
      </method>
      <method name="RequestRedraw" cname="gnome_canvas_request_redraw">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="x1" />
          <parameter type="int" name="y1" />
          <parameter type="int" name="x2" />
          <parameter type="int" name="y2" />
        </parameters>
      </method>
      <method name="RequestRedrawUta" cname="gnome_canvas_request_redraw_uta">
        <return-type type="void" />
        <parameters>
          <parameter type="ArtUta*" name="uta" />
        </parameters>
      </method>
      <method name="Root" cname="gnome_canvas_root">
        <return-type type="GnomeCanvasGroup*" />
      </method>
      <method name="ScrollTo" cname="gnome_canvas_scroll_to">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="cx" />
          <parameter type="int" name="cy" />
        </parameters>
      </method>
      <method name="SetCenterScrollRegion" cname="gnome_canvas_set_center_scroll_region">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="center_scroll_region" />
        </parameters>
      </method>
      <method name="SetDither" cname="gnome_canvas_set_dither">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRgbDither" name="dither" />
        </parameters>
      </method>
      <method name="SetPixelsPerUnit" cname="gnome_canvas_set_pixels_per_unit">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="n" />
        </parameters>
      </method>
      <method name="SetScrollRegion" cname="gnome_canvas_set_scroll_region">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="x1" />
          <parameter type="double" name="y1" />
          <parameter type="double" name="x2" />
          <parameter type="double" name="y2" />
        </parameters>
      </method>
      <method name="SetStippleOrigin" cname="gnome_canvas_set_stipple_origin">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
        </parameters>
      </method>
      <method name="UpdateBbox" cname="gnome_canvas_update_bbox" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
          <parameter type="int" name="x1" />
          <parameter type="int" name="y1" />
          <parameter type="int" name="x2" />
          <parameter type="int" name="y2" />
        </parameters>
      </method>
      <method name="UpdateNow" cname="gnome_canvas_update_now">
        <return-type type="void" />
      </method>
      <method name="UpdateSvp" cname="gnome_canvas_update_svp">
        <return-type type="void" />
        <parameters>
          <parameter type="ArtSVP**" name="p_svp" />
          <parameter type="ArtSVP*" name="new_svp" />
        </parameters>
      </method>
      <method name="UpdateSvpClip" cname="gnome_canvas_update_svp_clip">
        <return-type type="void" />
        <parameters>
          <parameter type="ArtSVP**" name="p_svp" />
          <parameter type="ArtSVP*" name="new_svp" />
          <parameter type="ArtSVP*" name="clip_svp" />
        </parameters>
      </method>
      <method name="W2c" cname="gnome_canvas_w2c">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="wx" />
          <parameter type="double" name="wy" />
          <parameter type="int*" name="cx" />
          <parameter type="int*" name="cy" />
        </parameters>
      </method>
      <method name="W2cAffine" cname="gnome_canvas_w2c_affine">
        <return-type type="void" />
        <parameters>
          <parameter type="double" array="true" name="affine" />
        </parameters>
      </method>
      <method name="W2cD" cname="gnome_canvas_w2c_d">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="wx" />
          <parameter type="double" name="wy" />
          <parameter type="double*" name="cx" />
          <parameter type="double*" name="cy" />
        </parameters>
      </method>
      <method name="WindowToWorld" cname="gnome_canvas_window_to_world">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="winx" />
          <parameter type="double" name="winy" />
          <parameter type="double*" name="worldx" />
          <parameter type="double*" name="worldy" />
        </parameters>
      </method>
      <method name="WorldToWindow" cname="gnome_canvas_world_to_window">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="worldx" />
          <parameter type="double" name="worldy" />
          <parameter type="double*" name="winx" />
          <parameter type="double*" name="winy" />
        </parameters>
      </method>
    </object>
    <object name="CanvasBpath" cname="GnomeCanvasBpath" parent="GnomeCanvasShape">
      <property name="Bpath" cname="bpath" type="GnomeCanvasPathDef" readable="true" writeable="true" />
      <method name="GetType" cname="gnome_canvas_bpath_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasClipgroup" cname="GnomeCanvasClipgroup" parent="GnomeCanvasGroup">
      <field name="Path" cname="path" type="GnomeCanvasPathDef*" />
      <field name="Wind" cname="wind" type="ArtWindRule" />
      <field name="Svp" cname="svp" type="ArtSVP*" />
      <property name="Path" cname="path" type="gpointer" readable="true" writeable="true" />
      <property name="Wind" cname="wind" type="guint" readable="true" writeable="true" />
      <method name="GetType" cname="gnome_canvas_clipgroup_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasEllipse" cname="GnomeCanvasEllipse" parent="GnomeCanvasRE">
      <method name="GetType" cname="gnome_canvas_ellipse_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasGroup" cname="GnomeCanvasGroup" parent="GnomeCanvasItem">
      <field name="ItemList" cname="item_list" type="GList*" />
      <field name="ItemListEnd" cname="item_list_end" type="GList*" />
      <property name="X" cname="x" type="gdouble" readable="true" writeable="true" />
      <property name="Y" cname="y" type="gdouble" readable="true" writeable="true" />
      <method name="GetType" cname="gnome_canvas_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasItem" cname="GnomeCanvasItem" parent="GtkObject">
      <field name="Canvas" cname="canvas" type="GnomeCanvas*" />
      <field name="Parent" cname="parent" type="GnomeCanvasItem*" />
      <field name="Xform" cname="xform" type="double*" />
      <field name="X1" cname="x1" type="double" />
      <field name="Y1" cname="y1" type="double" />
      <field name="X2" cname="x2" type="double" />
      <field name="Y2" cname="y2" type="double" />
      <property name="Parent" cname="parent" type="GnomeCanvasItem" readable="true" writeable="true" />
      <virtual_method name="Update" cname="update">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
          <parameter type="double*" name="affine" />
          <parameter type="ArtSVP*" name="clip_path" />
          <parameter type="int" name="flags" />
        </parameters>
      </virtual_method>
      <virtual_method name="Realize" cname="realize">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
        </parameters>
      </virtual_method>
      <virtual_method name="Unrealize" cname="unrealize">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
        </parameters>
      </virtual_method>
      <virtual_method name="Map" cname="map">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
        </parameters>
      </virtual_method>
      <virtual_method name="Unmap" cname="unmap">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
        </parameters>
      </virtual_method>
      <virtual_method name="Coverage" cname="coverage">
        <return-type type="ArtUta*" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
        </parameters>
      </virtual_method>
      <virtual_method name="Draw" cname="draw">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="Render" cname="render">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
          <parameter type="GnomeCanvasBuf*" name="buf" />
        </parameters>
      </virtual_method>
      <virtual_method name="Point" cname="point">
        <return-type type="double" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
          <parameter type="double" name="x" />
          <parameter type="double" name="y" />
          <parameter type="int" name="cx" />
          <parameter type="int" name="cy" />
          <parameter type="GnomeCanvasItem**" name="actual_item" />
        </parameters>
      </virtual_method>
      <virtual_method name="Bounds" cname="bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
          <parameter type="double*" name="x1" />
          <parameter type="double*" name="y1" />
          <parameter type="double*" name="x2" />
          <parameter type="double*" name="y2" />
        </parameters>
      </virtual_method>
      <signal name="Event" cname="event" when="LAST" field_name="event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeCanvasItem*" name="item" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </signal>
      <method name="AffineAbsolute" cname="gnome_canvas_item_affine_absolute">
        <return-type type="void" />
        <parameters>
          <parameter type="const-double" array="true" name="affine" />
        </parameters>
      </method>
      <method name="AffineRelative" cname="gnome_canvas_item_affine_relative">
        <return-type type="void" />
        <parameters>
          <parameter type="const-double" array="true" name="affine" />
        </parameters>
      </method>
      <method name="Construct" cname="gnome_canvas_item_construct">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasGroup*" name="parent" />
          <parameter type="const-gchar*" name="first_arg_name" />
          <parameter type="va_list" name="args" />
        </parameters>
      </method>
      <method name="GetBounds" cname="gnome_canvas_item_get_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="double*" name="x1" />
          <parameter type="double*" name="y1" />
          <parameter type="double*" name="x2" />
          <parameter type="double*" name="y2" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_canvas_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Grab" cname="gnome_canvas_item_grab">
        <return-type type="int" />
        <parameters>
          <parameter type="unsigned-int" name="event_mask" />
          <parameter type="GdkCursor*" name="cursor" />
          <parameter type="guint32" name="etime" />
        </parameters>
      </method>
      <method name="GrabFocus" cname="gnome_canvas_item_grab_focus">
        <return-type type="void" />
      </method>
      <method name="Hide" cname="gnome_canvas_item_hide">
        <return-type type="void" />
      </method>
      <method name="I2cAffine" cname="gnome_canvas_item_i2c_affine">
        <return-type type="void" />
        <parameters>
          <parameter type="double" array="true" name="affine" />
        </parameters>
      </method>
      <method name="I2w" cname="gnome_canvas_item_i2w">
        <return-type type="void" />
        <parameters>
          <parameter type="double*" name="x" />
          <parameter type="double*" name="y" />
        </parameters>
      </method>
      <method name="I2wAffine" cname="gnome_canvas_item_i2w_affine">
        <return-type type="void" />
        <parameters>
          <parameter type="double" array="true" name="affine" />
        </parameters>
      </method>
      <method name="Lower" cname="gnome_canvas_item_lower">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="positions" />
        </parameters>
      </method>
      <method name="LowerToBottom" cname="gnome_canvas_item_lower_to_bottom">
        <return-type type="void" />
      </method>
      <method name="Move" cname="gnome_canvas_item_move">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="dx" />
          <parameter type="double" name="dy" />
        </parameters>
      </method>
      <constructor cname="gnome_canvas_item_new">
        <parameters>
          <parameter type="GnomeCanvasGroup*" name="parent" />
          <parameter type="GType" name="type" />
          <parameter type="const-gchar*" name="first_arg_name" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="Raise" cname="gnome_canvas_item_raise">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="positions" />
        </parameters>
      </method>
      <method name="RaiseToTop" cname="gnome_canvas_item_raise_to_top">
        <return-type type="void" />
      </method>
      <method name="Reparent" cname="gnome_canvas_item_reparent">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasGroup*" name="new_group" />
        </parameters>
      </method>
      <method name="RequestRedrawSvp" cname="gnome_canvas_item_request_redraw_svp">
        <return-type type="void" />
        <parameters>
          <parameter type="const-ArtSVP*" name="svp" />
        </parameters>
      </method>
      <method name="RequestUpdate" cname="gnome_canvas_item_request_update">
        <return-type type="void" />
      </method>
      <method name="ResetBounds" cname="gnome_canvas_item_reset_bounds">
        <return-type type="void" />
      </method>
      <method name="Set" cname="gnome_canvas_item_set">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_arg_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetValist" cname="gnome_canvas_item_set_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_arg_name" />
          <parameter type="va_list" name="args" />
        </parameters>
      </method>
      <method name="Show" cname="gnome_canvas_item_show">
        <return-type type="void" />
      </method>
      <method name="Ungrab" cname="gnome_canvas_item_ungrab">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="etime" />
        </parameters>
      </method>
      <method name="UpdateSvp" cname="gnome_canvas_item_update_svp">
        <return-type type="void" />
        <parameters>
          <parameter type="ArtSVP**" name="p_svp" />
          <parameter type="ArtSVP*" name="new_svp" />
        </parameters>
      </method>
      <method name="UpdateSvpClip" cname="gnome_canvas_item_update_svp_clip">
        <return-type type="void" />
        <parameters>
          <parameter type="ArtSVP**" name="p_svp" />
          <parameter type="ArtSVP*" name="new_svp" />
          <parameter type="ArtSVP*" name="clip_svp" />
        </parameters>
      </method>
      <method name="W2i" cname="gnome_canvas_item_w2i">
        <return-type type="void" />
        <parameters>
          <parameter type="double*" name="x" />
          <parameter type="double*" name="y" />
        </parameters>
      </method>
    </object>
    <object name="CanvasLine" cname="GnomeCanvasLine" parent="GnomeCanvasItem">
      <field name="Coords" cname="coords" type="double*" />
      <field name="FirstCoords" cname="first_coords" type="double*" />
      <field name="LastCoords" cname="last_coords" type="double*" />
      <field name="Gc" cname="gc" type="GdkGC*" />
      <field name="Stipple" cname="stipple" type="GdkBitmap*" />
      <field name="FillSvp" cname="fill_svp" type="ArtSVP*" />
      <field name="FirstSvp" cname="first_svp" type="ArtSVP*" />
      <field name="LastSvp" cname="last_svp" type="ArtSVP*" />
      <field name="Width" cname="width" type="double" />
      <field name="ShapeA" cname="shape_a" type="double" />
      <field name="ShapeB" cname="shape_b" type="double" />
      <field name="ShapeC" cname="shape_c" type="double" />
      <field name="Cap" cname="cap" type="GdkCapStyle" />
      <field name="Join" cname="join" type="GdkJoinStyle" />
      <field name="LineStyle" cname="line_style" type="GdkLineStyle" />
      <field name="FillPixel" cname="fill_pixel" type="gulong" />
      <field name="FillRgba" cname="fill_rgba" type="guint32" />
      <field name="NumPoints" cname="num_points" type="int" />
      <field name="FillColor" cname="fill_color" type="guint" />
      <field name="SplineSteps" cname="spline_steps" type="int" />
      <field name="WidthPixels" cname="width_pixels" bits="1" type="guint" />
      <field name="FirstArrow" cname="first_arrow" bits="1" type="guint" />
      <field name="LastArrow" cname="last_arrow" bits="1" type="guint" />
      <field name="Smooth" cname="smooth" bits="1" type="guint" />
      <property name="Points" cname="points" type="GnomeCanvasPoints" readable="true" writeable="true" />
      <property name="FillColor" cname="fill_color" type="gchar*" readable="true" writeable="true" />
      <property name="FillColorGdk" cname="fill_color_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="FillColorRgba" cname="fill_color_rgba" type="guint" readable="true" writeable="true" />
      <property name="FillStipple" cname="fill_stipple" type="GdkDrawable" readable="true" writeable="true" />
      <property name="WidthPixels" cname="width_pixels" type="guint" readable="true" writeable="true" />
      <property name="WidthUnits" cname="width_units" type="gdouble" readable="true" writeable="true" />
      <property name="CapStyle" cname="cap_style" type="GdkCapStyle" readable="true" writeable="true" />
      <property name="JoinStyle" cname="join_style" type="GdkJoinStyle" readable="true" writeable="true" />
      <property name="LineStyle" cname="line_style" type="GdkLineStyle" readable="true" writeable="true" />
      <property name="FirstArrowhead" cname="first_arrowhead" type="gboolean" readable="true" writeable="true" />
      <property name="LastArrowhead" cname="last_arrowhead" type="gboolean" readable="true" writeable="true" />
      <property name="Smooth" cname="smooth" type="gboolean" readable="true" writeable="true" />
      <property name="SplineSteps" cname="spline_steps" type="guint" readable="true" writeable="true" />
      <property name="ArrowShapeA" cname="arrow_shape_a" type="gdouble" readable="true" writeable="true" />
      <property name="ArrowShapeB" cname="arrow_shape_b" type="gdouble" readable="true" writeable="true" />
      <property name="ArrowShapeC" cname="arrow_shape_c" type="gdouble" readable="true" writeable="true" />
      <method name="GetType" cname="gnome_canvas_line_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasPixbuf" cname="GnomeCanvasPixbuf" parent="GnomeCanvasItem">
      <field name="Priv" cname="priv" type="gpointer" />
      <property name="Pixbuf" cname="pixbuf" type="GdkPixbuf" readable="true" writeable="true" />
      <property name="Width" cname="width" type="gdouble" readable="true" writeable="true" />
      <property name="WidthSet" cname="width_set" type="gboolean" readable="true" writeable="true" />
      <property name="WidthInPixels" cname="width_in_pixels" type="gboolean" readable="true" writeable="true" />
      <property name="Height" cname="height" type="gdouble" readable="true" writeable="true" />
      <property name="HeightSet" cname="height_set" type="gboolean" readable="true" writeable="true" />
      <property name="HeightInPixels" cname="height_in_pixels" type="gboolean" readable="true" writeable="true" />
      <property name="X" cname="x" type="gdouble" readable="true" writeable="true" />
      <property name="XInPixels" cname="x_in_pixels" type="gboolean" readable="true" writeable="true" />
      <property name="Y" cname="y" type="gdouble" readable="true" writeable="true" />
      <property name="YInPixels" cname="y_in_pixels" type="gboolean" readable="true" writeable="true" />
      <property name="Anchor" cname="anchor" type="GtkAnchorType" readable="true" writeable="true" />
      <method name="GetType" cname="gnome_canvas_pixbuf_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasPolygon" cname="GnomeCanvasPolygon" parent="GnomeCanvasShape">
      <field name="PathDef" cname="path_def" type="GnomeCanvasPathDef*" />
      <property name="Points" cname="points" type="GnomeCanvasPoints" readable="true" writeable="true" />
      <method name="GetType" cname="gnome_canvas_polygon_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ToPoint" cname="gnome_canvas_polygon_to_point" shared="true">
        <return-type type="double" />
        <parameters>
          <parameter type="double*" name="poly" />
          <parameter type="int" name="num_points" />
          <parameter type="double" name="x" />
          <parameter type="double" name="y" />
        </parameters>
      </method>
    </object>
    <object name="CanvasRE" cname="GnomeCanvasRE" parent="GnomeCanvasShape">
      <field name="X1" cname="x1" type="double" />
      <field name="Y1" cname="y1" type="double" />
      <field name="X2" cname="x2" type="double" />
      <field name="Y2" cname="y2" type="double" />
      <field name="PathDirty" cname="path_dirty" bits="1" type="unsigned int" />
      <property name="X1" cname="x1" type="gdouble" readable="true" writeable="true" />
      <property name="Y1" cname="y1" type="gdouble" readable="true" writeable="true" />
      <property name="X2" cname="x2" type="gdouble" readable="true" writeable="true" />
      <property name="Y2" cname="y2" type="gdouble" readable="true" writeable="true" />
      <method name="GetType" cname="gnome_canvas_re_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasRect" cname="GnomeCanvasRect" parent="GnomeCanvasRE">
      <method name="GetType" cname="gnome_canvas_rect_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasRichText" cname="GnomeCanvasRichText" parent="GnomeCanvasItem">
      <field name="Priv" cname="_priv" type="GnomeCanvasRichTextPrivate*" />
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" />
      <property name="X" cname="x" type="gdouble" readable="true" writeable="true" />
      <property name="Y" cname="y" type="gdouble" readable="true" writeable="true" />
      <property name="Width" cname="width" type="gdouble" readable="true" writeable="true" />
      <property name="Height" cname="height" type="gdouble" readable="true" writeable="true" />
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" />
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" />
      <property name="CursorVisible" cname="cursor_visible" type="gboolean" readable="true" writeable="true" />
      <property name="CursorBlink" cname="cursor_blink" type="gboolean" readable="true" writeable="true" />
      <property name="GrowHeight" cname="grow_height" type="gboolean" readable="true" writeable="true" />
      <property name="WrapMode" cname="wrap_mode" type="GtkWrapMode" readable="true" writeable="true" />
      <property name="Justification" cname="justification" type="GtkJustification" readable="true" writeable="true" />
      <property name="Direction" cname="direction" type="GtkDirectionType" readable="true" writeable="true" />
      <property name="Anchor" cname="anchor" type="GtkAnchorType" readable="true" writeable="true" />
      <property name="PixelsAboveLines" cname="pixels_above_lines" type="gint" readable="true" writeable="true" />
      <property name="PixelsBelowLines" cname="pixels_below_lines" type="gint" readable="true" writeable="true" />
      <property name="PixelsInsideWrap" cname="pixels_inside_wrap" type="gint" readable="true" writeable="true" />
      <property name="LeftMargin" cname="left_margin" type="gint" readable="true" writeable="true" />
      <property name="RightMargin" cname="right_margin" type="gint" readable="true" writeable="true" />
      <property name="Indent" cname="indent" type="gint" readable="true" writeable="true" />
      <signal when="LAST" field_name="tag_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasRichText*" name="text" />
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </signal>
      <method name="CopyClipboard" cname="gnome_canvas_rich_text_copy_clipboard">
        <return-type type="void" />
      </method>
      <method name="CutClipboard" cname="gnome_canvas_rich_text_cut_clipboard">
        <return-type type="void" />
      </method>
      <method name="GetBuffer" cname="gnome_canvas_rich_text_get_buffer">
        <return-type type="GtkTextBuffer*" />
      </method>
      <method name="GetIterAtLocation" cname="gnome_canvas_rich_text_get_iter_at_location">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetIterLocation" cname="gnome_canvas_rich_text_get_iter_location">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="iter" />
          <parameter type="GdkRectangle*" name="location" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_canvas_rich_text_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PasteClipboard" cname="gnome_canvas_rich_text_paste_clipboard">
        <return-type type="void" />
      </method>
      <method name="SetBuffer" cname="gnome_canvas_rich_text_set_buffer">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </method>
    </object>
    <object name="CanvasShape" cname="GnomeCanvasShape" parent="GnomeCanvasItem">
      <field name="Priv" cname="priv" type="GnomeCanvasShapePriv*" />
      <property name="FillColor" cname="fill_color" type="gchar*" writeable="true" />
      <property name="FillColorGdk" cname="fill_color_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="FillColorRgba" cname="fill_color_rgba" type="guint" readable="true" writeable="true" />
      <property name="OutlineColor" cname="outline_color" type="gchar*" writeable="true" />
      <property name="OutlineColorGdk" cname="outline_color_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="OutlineColorRgba" cname="outline_color_rgba" type="guint" readable="true" writeable="true" />
      <property name="FillStipple" cname="fill_stipple" type="GdkDrawable" readable="true" writeable="true" />
      <property name="OutlineStipple" cname="outline_stipple" type="GdkDrawable" readable="true" writeable="true" />
      <property name="WidthPixels" cname="width_pixels" type="guint" readable="true" writeable="true" />
      <property name="WidthUnits" cname="width_units" type="gdouble" readable="true" writeable="true" />
      <property name="CapStyle" cname="cap_style" type="GdkCapStyle" readable="true" writeable="true" />
      <property name="JoinStyle" cname="join_style" type="GdkJoinStyle" readable="true" writeable="true" />
      <property name="Wind" cname="wind" type="guint" readable="true" writeable="true" />
      <property name="Miterlimit" cname="miterlimit" type="gdouble" readable="true" writeable="true" />
      <property name="Dash" cname="dash" type="gpointer" readable="true" writeable="true" />
      <method name="GetPathDef" cname="gnome_canvas_shape_get_path_def">
        <return-type type="GnomeCanvasPathDef*" />
      </method>
      <method name="GetType" cname="gnome_canvas_shape_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetPathDef" cname="gnome_canvas_shape_set_path_def">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeCanvasPathDef*" name="def" />
        </parameters>
      </method>
    </object>
    <object name="CanvasText" cname="GnomeCanvasText" parent="GnomeCanvasItem">
      <field name="FontDesc" cname="font_desc" type="PangoFontDescription*" />
      <field name="AttrList" cname="attr_list" type="PangoAttrList*" />
      <field name="Underline" cname="underline" type="PangoUnderline" />
      <field name="Strikethrough" cname="strikethrough" type="gboolean" />
      <field name="Rise" cname="rise" type="int" />
      <field name="Scale" cname="scale" type="double" />
      <field name="Text" cname="text" type="char*" />
      <field name="Stipple" cname="stipple" type="GdkBitmap*" />
      <field name="Gc" cname="gc" type="GdkGC*" />
      <field name="Layout" cname="layout" type="PangoLayout*" />
      <field name="Pixel" cname="pixel" type="gulong" />
      <field name="X" cname="x" type="double" />
      <field name="Y" cname="y" type="double" />
      <field name="ClipWidth" cname="clip_width" type="double" />
      <field name="ClipHeight" cname="clip_height" type="double" />
      <field name="Xofs" cname="xofs" type="double" />
      <field name="Yofs" cname="yofs" type="double" />
      <field name="Affine" cname="affine" array_len="6" type="double" />
      <field name="Anchor" cname="anchor" type="GtkAnchorType" />
      <field name="Justification" cname="justification" type="GtkJustification" />
      <field name="Cx" cname="cx" type="int" />
      <field name="Cy" cname="cy" type="int" />
      <field name="ClipCx" cname="clip_cx" type="int" />
      <field name="ClipCy" cname="clip_cy" type="int" />
      <field name="ClipCwidth" cname="clip_cwidth" type="int" />
      <field name="ClipCheight" cname="clip_cheight" type="int" />
      <field name="MaxWidth" cname="max_width" type="int" />
      <field name="Height" cname="height" type="int" />
      <field name="Rgba" cname="rgba" type="guint32" />
      <field name="Clip" cname="clip" bits="1" type="guint" />
      <field name="UnderlineSet" cname="underline_set" bits="1" type="guint" />
      <field name="StrikeSet" cname="strike_set" bits="1" type="guint" />
      <field name="RiseSet" cname="rise_set" bits="1" type="guint" />
      <field name="ScaleSet" cname="scale_set" bits="1" type="guint" />
      <field name="Priv" cname="priv" type="GnomeCanvasTextPrivate*" />
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" />
      <property name="Markup" cname="markup" type="gchar*" writeable="true" />
      <property name="X" cname="x" type="gdouble" readable="true" writeable="true" />
      <property name="Y" cname="y" type="gdouble" readable="true" writeable="true" />
      <property name="Font" cname="font" type="gchar*" readable="true" writeable="true" />
      <property name="FontDesc" cname="font_desc" type="PangoFontDescription" readable="true" writeable="true" />
      <property name="Family" cname="family" type="gchar*" readable="true" writeable="true" />
      <property name="Attributes" cname="attributes" type="PangoAttrList" readable="true" writeable="true" />
      <property name="Style" cname="style" type="PangoStyle" readable="true" writeable="true" />
      <property name="Variant" cname="variant" type="PangoVariant" readable="true" writeable="true" />
      <property name="Weight" cname="weight" type="gint" readable="true" writeable="true" />
      <property name="Stretch" cname="stretch" type="PangoStretch" readable="true" writeable="true" />
      <property name="Size" cname="size" type="gint" readable="true" writeable="true" />
      <property name="SizePoints" cname="size_points" type="gdouble" readable="true" writeable="true" />
      <property name="Rise" cname="rise" type="gint" readable="true" writeable="true" />
      <property name="Strikethrough" cname="strikethrough" type="gboolean" readable="true" writeable="true" />
      <property name="Underline" cname="underline" type="PangoUnderline" readable="true" writeable="true" />
      <property name="Scale" cname="scale" type="gdouble" readable="true" writeable="true" />
      <property name="Anchor" cname="anchor" type="GtkAnchorType" readable="true" writeable="true" />
      <property name="Justification" cname="justification" type="GtkJustification" readable="true" writeable="true" />
      <property name="ClipWidth" cname="clip_width" type="gdouble" readable="true" writeable="true" />
      <property name="ClipHeight" cname="clip_height" type="gdouble" readable="true" writeable="true" />
      <property name="Clip" cname="clip" type="gboolean" readable="true" writeable="true" />
      <property name="XOffset" cname="x_offset" type="gdouble" readable="true" writeable="true" />
      <property name="YOffset" cname="y_offset" type="gdouble" readable="true" writeable="true" />
      <property name="FillColor" cname="fill_color" type="gchar*" readable="true" writeable="true" />
      <property name="FillColorGdk" cname="fill_color_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="FillColorRgba" cname="fill_color_rgba" type="guint" readable="true" writeable="true" />
      <property name="FillStipple" cname="fill_stipple" type="GdkDrawable" readable="true" writeable="true" />
      <property name="TextWidth" cname="text_width" type="gdouble" readable="true" />
      <property name="TextHeight" cname="text_height" type="gdouble" readable="true" />
      <method name="GetType" cname="gnome_canvas_text_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="CanvasWidget" cname="GnomeCanvasWidget" parent="GnomeCanvasItem">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="X" cname="x" type="double" />
      <field name="Y" cname="y" type="double" />
      <field name="Width" cname="width" type="double" />
      <field name="Height" cname="height" type="double" />
      <field name="Anchor" cname="anchor" type="GtkAnchorType" />
      <field name="Cx" cname="cx" type="int" />
      <field name="Cy" cname="cy" type="int" />
      <field name="Cwidth" cname="cwidth" type="int" />
      <field name="Cheight" cname="cheight" type="int" />
      <field name="DestroyId" cname="destroy_id" type="guint" />
      <field name="SizePixels" cname="size_pixels" bits="1" type="guint" />
      <field name="InDestroy" cname="in_destroy" bits="1" type="guint" />
      <property name="Widget" cname="widget" type="GtkWidget" readable="true" writeable="true" />
      <property name="X" cname="x" type="gdouble" readable="true" writeable="true" />
      <property name="Y" cname="y" type="gdouble" readable="true" writeable="true" />
      <property name="Width" cname="width" type="gdouble" readable="true" writeable="true" />
      <property name="Height" cname="height" type="gdouble" readable="true" writeable="true" />
      <property name="Anchor" cname="anchor" type="GtkAnchorType" readable="true" writeable="true" />
      <property name="SizePixels" cname="size_pixels" type="gboolean" readable="true" writeable="true" />
      <method name="GetType" cname="gnome_canvas_widget_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <struct name="CanvasBpathPriv" cname="GnomeCanvasBpathPriv" opaque="true" />
    <struct name="CanvasBuf" cname="GnomeCanvasBuf">
      <field name="Buf" cname="buf" type="guchar*" />
      <field name="Rect" cname="rect" type="ArtIRect" />
      <field name="BufRowstride" cname="buf_rowstride" type="int" />
      <field name="BgColor" cname="bg_color" type="guint32" />
      <field name="IsBg" cname="is_bg" bits="1" type="unsigned int" />
      <field name="IsBuf" cname="is_buf" bits="1" type="unsigned int" />
      <method name="EnsureBuf" cname="gnome_canvas_buf_ensure_buf">
        <return-type type="void" />
      </method>
    </struct>
    <boxed name="CanvasPathDef" cname="GnomeCanvasPathDef" opaque="true">
      <method name="AllClosed" cname="gnome_canvas_path_def_all_closed">
        <return-type type="gboolean" />
      </method>
      <method name="AllOpen" cname="gnome_canvas_path_def_all_open">
        <return-type type="gboolean" />
      </method>
      <method name="AnyClosed" cname="gnome_canvas_path_def_any_closed">
        <return-type type="gboolean" />
      </method>
      <method name="AnyOpen" cname="gnome_canvas_path_def_any_open">
        <return-type type="gboolean" />
      </method>
      <method name="Bpath" cname="gnome_canvas_path_def_bpath">
        <return-type type="ArtBpath*" />
      </method>
      <method name="CloseAll" cname="gnome_canvas_path_def_close_all">
        <return-type type="GnomeCanvasPathDef*" />
      </method>
      <method name="ClosedParts" cname="gnome_canvas_path_def_closed_parts">
        <return-type type="GnomeCanvasPathDef*" />
      </method>
      <method name="Closepath" cname="gnome_canvas_path_def_closepath">
        <return-type type="void" />
      </method>
      <method name="ClosepathCurrent" cname="gnome_canvas_path_def_closepath_current">
        <return-type type="void" />
      </method>
      <method name="Concat" cname="gnome_canvas_path_def_concat" shared="true">
        <return-type type="GnomeCanvasPathDef*" />
        <parameters>
          <parameter type="const-GSList*" name="list" />
        </parameters>
      </method>
      <method name="Copy" cname="gnome_canvas_path_def_copy">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GnomeCanvasPathDef*" name="src" />
        </parameters>
      </method>
      <method name="Currentpoint" cname="gnome_canvas_path_def_currentpoint">
        <return-type type="void" />
        <parameters>
          <parameter type="ArtPoint*" name="p" />
        </parameters>
      </method>
      <method name="Curveto" cname="gnome_canvas_path_def_curveto">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="x0" />
          <parameter type="gdouble" name="y0" />
          <parameter type="gdouble" name="x1" />
          <parameter type="gdouble" name="y1" />
          <parameter type="gdouble" name="x2" />
          <parameter type="gdouble" name="y2" />
        </parameters>
      </method>
      <method name="Duplicate" cname="gnome_canvas_path_def_duplicate">
        <return-type type="GnomeCanvasPathDef*" />
      </method>
      <method name="EnsureSpace" cname="gnome_canvas_path_def_ensure_space">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="space" />
        </parameters>
      </method>
      <method name="Finish" cname="gnome_canvas_path_def_finish">
        <return-type type="void" />
      </method>
      <method name="FirstBpath" cname="gnome_canvas_path_def_first_bpath">
        <return-type type="ArtBpath*" />
      </method>
      <method name="GetType" cname="gnome_canvas_path_def_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasCurrentpoint" cname="gnome_canvas_path_def_has_currentpoint">
        <return-type type="gboolean" />
      </method>
      <method name="IsEmpty" cname="gnome_canvas_path_def_is_empty">
        <return-type type="gboolean" />
      </method>
      <method name="LastBpath" cname="gnome_canvas_path_def_last_bpath">
        <return-type type="ArtBpath*" />
      </method>
      <method name="Length" cname="gnome_canvas_path_def_length">
        <return-type type="gint" />
      </method>
      <method name="Lineto" cname="gnome_canvas_path_def_lineto">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
        </parameters>
      </method>
      <method name="LinetoMoving" cname="gnome_canvas_path_def_lineto_moving">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
        </parameters>
      </method>
      <method name="Moveto" cname="gnome_canvas_path_def_moveto">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
        </parameters>
      </method>
      <constructor cname="gnome_canvas_path_def_new" />
      <constructor cname="gnome_canvas_path_def_new_from_bpath">
        <parameters>
          <parameter type="ArtBpath*" name="bpath" />
        </parameters>
      </constructor>
      <constructor cname="gnome_canvas_path_def_new_from_foreign_bpath">
        <parameters>
          <parameter type="ArtBpath*" name="bpath" />
        </parameters>
      </constructor>
      <constructor cname="gnome_canvas_path_def_new_from_static_bpath">
        <parameters>
          <parameter type="ArtBpath*" name="bpath" />
        </parameters>
      </constructor>
      <constructor cname="gnome_canvas_path_def_new_sized">
        <parameters>
          <parameter type="gint" name="length" />
        </parameters>
      </constructor>
      <method name="OpenParts" cname="gnome_canvas_path_def_open_parts">
        <return-type type="GnomeCanvasPathDef*" />
      </method>
      <method name="Ref" cname="gnome_canvas_path_def_ref">
        <return-type type="void" />
      </method>
      <method name="Reset" cname="gnome_canvas_path_def_reset">
        <return-type type="void" />
      </method>
      <method name="Split" cname="gnome_canvas_path_def_split">
        <return-type type="GSList*" />
      </method>
      <method name="Unref" cname="gnome_canvas_path_def_unref">
        <return-type type="void" />
      </method>
    </boxed>
    <boxed name="CanvasPoints" cname="GnomeCanvasPoints" opaque="true">
      <field name="Coords" cname="coords" type="double*" access="public" writeable="true" />
      <field name="NumPoints" cname="num_points" type="int" access="public" writeable="true" />
      <field name="RefCount" cname="ref_count" type="int" access="public" writeable="true" />
      <method name="Free" cname="gnome_canvas_points_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gnome_canvas_points_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_canvas_points_new">
        <parameters>
          <parameter type="int" name="num_points" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gnome_canvas_points_ref">
        <return-type type="GnomeCanvasPoints*" />
      </method>
    </boxed>
    <struct name="CanvasShapePriv" cname="GnomeCanvasShapePriv" opaque="true" />
  </namespace>
  <namespace name="Gnome" library="gnomeui-2">
    <enum name="ClientFlags" cname="GnomeClientFlags" gtype="gnome_client_flags_get_type" type="flags">
      <member cname="GNOME_CLIENT_IS_CONNECTED" name="IsConnected" value="1 &lt;&lt; 0" />
      <member cname="GNOME_CLIENT_RESTARTED" name="Restarted" value="1 &lt;&lt; 1" />
      <member cname="GNOME_CLIENT_RESTORED" name="Restored" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="ClientState" cname="GnomeClientState" gtype="gnome_client_state_get_type" type="enum">
      <member cname="GNOME_CLIENT_IDLE" name="Idle" />
      <member cname="GNOME_CLIENT_SAVING_PHASE_1" name="SavingPhase1" />
      <member cname="GNOME_CLIENT_WAITING_FOR_PHASE_2" name="WaitingForPhase2" />
      <member cname="GNOME_CLIENT_SAVING_PHASE_2" name="SavingPhase2" />
      <member cname="GNOME_CLIENT_FROZEN" name="Frozen" />
      <member cname="GNOME_CLIENT_DISCONNECTED" name="Disconnected" />
      <member cname="GNOME_CLIENT_REGISTERING" name="Registering" />
    </enum>
    <enum name="DateEditFlags" cname="GnomeDateEditFlags" gtype="gnome_date_edit_flags_get_type" type="flags">
      <member cname="GNOME_DATE_EDIT_SHOW_TIME" name="ShowTime" value="1 &lt;&lt; 0" />
      <member cname="GNOME_DATE_EDIT_24_HR" name="Two4Hr" value="1 &lt;&lt; 1" />
      <member cname="GNOME_DATE_EDIT_WEEK_STARTS_ON_MONDAY" name="WeekStartsOnMonday" value="1 &lt;&lt; 2" />
      <member cname="GNOME_DATE_EDIT_DISPLAY_SECONDS" name="DisplaySeconds" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="DialogType" cname="GnomeDialogType" gtype="gnome_dialog_type_get_type" type="enum">
      <member cname="GNOME_DIALOG_ERROR" name="Error" />
      <member cname="GNOME_DIALOG_NORMAL" name="Normal" />
    </enum>
    <enum name="EdgePosition" cname="GnomeEdgePosition" deprecated="1" gtype="gnome_edge_position_get_type" type="enum">
      <member cname="GNOME_EDGE_START" name="Start" />
      <member cname="GNOME_EDGE_FINISH" name="Finish" />
      <member cname="GNOME_EDGE_OTHER" name="Other" />
      <member cname="GNOME_EDGE_LAST" name="Last" />
    </enum>
    <enum name="FontPickerMode" cname="GnomeFontPickerMode" deprecated="1" gtype="gnome_font_picker_mode_get_type" type="enum">
      <member cname="GNOME_FONT_PICKER_MODE_PIXMAP" name="Pixmap" />
      <member cname="GNOME_FONT_PICKER_MODE_FONT_INFO" name="FontInfo" />
      <member cname="GNOME_FONT_PICKER_MODE_USER_WIDGET" name="UserWidget" />
      <member cname="GNOME_FONT_PICKER_MODE_UNKNOWN" name="Unknown" />
    </enum>
    <enum name="IconListMode" cname="GnomeIconListMode" deprecated="1" gtype="gnome_icon_list_mode_get_type" type="enum">
      <member cname="GNOME_ICON_LIST_ICONS" name="Icons" />
      <member cname="GNOME_ICON_LIST_TEXT_BELOW" name="TextBelow" />
      <member cname="GNOME_ICON_LIST_TEXT_RIGHT" name="TextRight" />
    </enum>
    <enum name="IconLookupFlags" cname="GnomeIconLookupFlags" gtype="gnome_icon_lookup_flags_get_type" type="flags">
      <member cname="GNOME_ICON_LOOKUP_FLAGS_NONE" name="None" />
      <member cname="GNOME_ICON_LOOKUP_FLAGS_EMBEDDING_TEXT" name="EmbeddingText" value="1 &lt;&lt; 0" />
      <member cname="GNOME_ICON_LOOKUP_FLAGS_SHOW_SMALL_IMAGES_AS_THEMSELVES" name="ShowSmallImagesAsThemselves" value="1 &lt;&lt; 1" />
      <member cname="GNOME_ICON_LOOKUP_FLAGS_ALLOW_SVG_AS_THEMSELVES" name="AllowSvgAsThemselves" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="IconLookupResultFlags" cname="GnomeIconLookupResultFlags" gtype="gnome_icon_lookup_result_flags_get_type" type="flags">
      <member cname="GNOME_ICON_LOOKUP_RESULT_FLAGS_NONE" name="None" />
      <member cname="GNOME_ICON_LOOKUP_RESULT_FLAGS_THUMBNAIL" name="Thumbnail" value="1 &lt;&lt; 0" />
    </enum>
    <enum name="InteractStyle" cname="GnomeInteractStyle" gtype="gnome_interact_style_get_type" type="enum">
      <member cname="GNOME_INTERACT_NONE" name="None" />
      <member cname="GNOME_INTERACT_ERRORS" name="Errors" />
      <member cname="GNOME_INTERACT_ANY" name="Any" />
    </enum>
    <enum name="PasswordDialogRemember" cname="GnomePasswordDialogRemember" gtype="gnome_password_dialog_remember_get_type" type="enum">
      <member cname="GNOME_PASSWORD_DIALOG_REMEMBER_NOTHING" name="Nothing" />
      <member cname="GNOME_PASSWORD_DIALOG_REMEMBER_SESSION" name="Session" />
      <member cname="GNOME_PASSWORD_DIALOG_REMEMBER_FOREVER" name="Forever" />
    </enum>
    <enum name="PreferencesType" cname="GnomePreferencesType" gtype="gnome_preferences_type_get_type" type="enum">
      <member cname="GNOME_PREFERENCES_NEVER" name="Never" />
      <member cname="GNOME_PREFERENCES_USER" name="User" />
      <member cname="GNOME_PREFERENCES_ALWAYS" name="Always" />
    </enum>
    <enum name="RestartStyle" cname="GnomeRestartStyle" gtype="gnome_restart_style_get_type" type="enum">
      <member cname="GNOME_RESTART_IF_RUNNING" name="IfRunning" />
      <member cname="GNOME_RESTART_ANYWAY" name="Anyway" />
      <member cname="GNOME_RESTART_IMMEDIATELY" name="Immediately" />
      <member cname="GNOME_RESTART_NEVER" name="Never" />
    </enum>
    <enum name="SaveStyle" cname="GnomeSaveStyle" gtype="gnome_save_style_get_type" type="enum">
      <member cname="GNOME_SAVE_GLOBAL" name="Global" />
      <member cname="GNOME_SAVE_LOCAL" name="Local" />
      <member cname="GNOME_SAVE_BOTH" name="Both" />
    </enum>
    <enum name="ThemeFileParseError" cname="GnomeThemeFileParseError" deprecated="1" type="enum">
      <member cname="GNOME_THEME_FILE_PARSE_ERROR_INVALID_SYNTAX" name="Syntax" />
      <member cname="GNOME_THEME_FILE_PARSE_ERROR_INVALID_ESCAPES" name="Escapes" />
      <member cname="GNOME_THEME_FILE_PARSE_ERROR_INVALID_CHARS" name="Chars" />
    </enum>
    <enum name="ThumbnailSize" cname="GnomeThumbnailSize" gtype="gnome_thumbnail_size_get_type" type="enum">
      <member cname="GNOME_THUMBNAIL_SIZE_NORMAL" name="Normal" />
      <member cname="GNOME_THUMBNAIL_SIZE_LARGE" name="Large" />
    </enum>
    <enum name="UIInfoConfigurableTypes" cname="GnomeUIInfoConfigurableTypes" type="enum">
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_NEW" name="New" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_OPEN" name="Open" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_SAVE" name="Save" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_SAVE_AS" name="SaveAs" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_REVERT" name="Revert" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_PRINT" name="Print" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_PRINT_SETUP" name="PrintSetup" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_CLOSE" name="Close" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_QUIT" name="Quit" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_CUT" name="Cut" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_COPY" name="Copy" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_PASTE" name="Paste" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_CLEAR" name="Clear" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_UNDO" name="Undo" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_REDO" name="Redo" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_FIND" name="Find" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_FIND_AGAIN" name="FindAgain" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_REPLACE" name="Replace" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_PROPERTIES" name="Properties" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_PREFERENCES" name="Preferences" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_ABOUT" name="About" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_SELECT_ALL" name="SelectAll" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_NEW_WINDOW" name="NewWindow" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_CLOSE_WINDOW" name="CloseWindow" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_NEW_GAME" name="NewGame" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_PAUSE_GAME" name="PauseGame" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_RESTART_GAME" name="RestartGame" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_UNDO_MOVE" name="UndoMove" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_REDO_MOVE" name="RedoMove" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_HINT" name="Hint" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_SCORES" name="Scores" />
      <member cname="GNOME_APP_CONFIGURABLE_ITEM_END_GAME" name="EndGame" />
    </enum>
    <enum name="UIInfoType" cname="GnomeUIInfoType" type="enum">
      <member cname="GNOME_APP_UI_ENDOFINFO" name="Endofinfo" />
      <member cname="GNOME_APP_UI_ITEM" name="Item" />
      <member cname="GNOME_APP_UI_TOGGLEITEM" name="Toggleitem" />
      <member cname="GNOME_APP_UI_RADIOITEMS" name="Radioitems" />
      <member cname="GNOME_APP_UI_SUBTREE" name="Subtree" />
      <member cname="GNOME_APP_UI_SEPARATOR" name="Separator" />
      <member cname="GNOME_APP_UI_HELP" name="Help" />
      <member cname="GNOME_APP_UI_BUILDER_DATA" name="BuilderData" />
      <member cname="GNOME_APP_UI_ITEM_CONFIGURABLE" name="ItemConfigurable" />
      <member cname="GNOME_APP_UI_SUBTREE_STOCK" name="SubtreeStock" />
      <member cname="GNOME_APP_UI_INCLUDE" name="Include" />
    </enum>
    <enum name="UIPixmapType" cname="GnomeUIPixmapType" type="enum">
      <member cname="GNOME_APP_PIXMAP_NONE" name="None" />
      <member cname="GNOME_APP_PIXMAP_STOCK" name="Stock" />
      <member cname="GNOME_APP_PIXMAP_DATA" name="Data" />
      <member cname="GNOME_APP_PIXMAP_FILENAME" name="Filename" />
    </enum>
    <callback name="GdkPixbufDoneCallback" cname="GnomeGdkPixbufDoneCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GnomeGdkPixbufAsyncHandle*" name="handle" />
        <parameter type="gpointer" name="cb_data" />
      </parameters>
    </callback>
    <callback name="GdkPixbufLoadCallback" cname="GnomeGdkPixbufLoadCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GnomeGdkPixbufAsyncHandle*" name="handle" />
        <parameter type="GnomeVFSResult" name="error" />
        <parameter type="GdkPixbuf*" name="pixbuf" />
        <parameter type="gpointer" name="cb_data" />
      </parameters>
    </callback>
    <callback name="InteractFunction" cname="GnomeInteractFunction">
      <return-type type="void" />
      <parameters>
        <parameter type="GnomeClient*" name="client" />
        <parameter type="gint" name="key" />
        <parameter type="GnomeDialogType" name="dialog_type" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="PasswordDialogQualityFunc" cname="GnomePasswordDialogQualityFunc">
      <return-type type="gdouble" />
      <parameters>
        <parameter type="GnomePasswordDialog*" name="password_dialog" />
        <parameter type="const-char*" name="password" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ReplyCallback" cname="GnomeReplyCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="gint" name="reply" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="StringCallback" cname="GnomeStringCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="gchar*" name="string" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ThemeFileLineFunc" cname="GnomeThemeFileLineFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GnomeThemeFile*" name="df" />
        <parameter type="const-char*" name="key" />
        <parameter type="const-char*" name="locale" />
        <parameter type="const-char*" name="value" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ThemeFileSectionFunc" cname="GnomeThemeFileSectionFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GnomeThemeFile*" name="df" />
        <parameter type="const-char*" name="name" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="UISignalConnectFunc" cname="GnomeUISignalConnectFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GnomeUIInfo*" name="uiinfo" />
        <parameter type="const-char*" name="signal_name" />
        <parameter type="GnomeUIBuilderData*" name="uibdata" />
      </parameters>
    </callback>
    <object name="About" cname="GnomeAbout" deprecated="1" parent="GtkDialog">
      <field name="Priv" cname="_priv" type="GnomeAboutPrivate*" />
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" />
      <property name="Version" cname="version" type="gchar*" readable="true" writeable="true" />
      <property name="Copyright" cname="copyright" type="gchar*" readable="true" writeable="true" />
      <property name="Comments" cname="comments" type="gchar*" readable="true" writeable="true" />
      <property name="Authors" cname="authors" type="value_array" writeable="true" />
      <property name="Documenters" cname="documenters" type="value_array" writeable="true" />
      <property name="TranslatorCredits" cname="translator_credits" type="gchar*" readable="true" writeable="true" />
      <property name="Logo" cname="logo" type="GdkPixbuf" writeable="true" />
      <method name="Construct" cname="gnome_about_construct" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="version" />
          <parameter type="const-gchar*" name="copyright" />
          <parameter type="const-gchar*" name="comments" />
          <parameter type="const-gchar**" name="authors" />
          <parameter type="const-gchar**" name="documenters" />
          <parameter type="const-gchar*" name="translator_credits" />
          <parameter type="GdkPixbuf*" name="logo_pixbuf" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_about_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_about_new" deprecated="1">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="version" />
          <parameter type="const-gchar*" name="copyright" />
          <parameter type="const-gchar*" name="comments" />
          <parameter type="const-gchar**" name="authors" />
          <parameter type="const-gchar**" name="documenters" />
          <parameter type="const-gchar*" name="translator_credits" />
          <parameter type="GdkPixbuf*" name="logo_pixbuf" />
        </parameters>
      </constructor>
    </object>
    <object name="App" cname="GnomeApp" parent="GtkWindow">
      <field name="Name" cname="name" type="gchar*" />
      <field name="Prefix" cname="prefix" type="gchar*" />
      <field name="Dock" cname="dock" type="GtkWidget*" />
      <field name="Statusbar" cname="statusbar" type="GtkWidget*" />
      <field name="Vbox" cname="vbox" type="GtkWidget*" />
      <field name="Menubar" cname="menubar" type="GtkWidget*" />
      <field name="Contents" cname="contents" type="GtkWidget*" />
      <field name="Layout" cname="layout" type="BonoboDockLayout*" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="EnableLayoutConfig" cname="enable_layout_config" bits="1" type="guint" />
      <field name="Priv" cname="_priv" type="GnomeAppPrivate*" />
      <property name="AppId" cname="app_id" type="gchar*" readable="true" writeable="true" construct="true" />
      <method name="AddDockItem" cname="gnome_app_add_dock_item">
        <return-type type="void" />
        <parameters>
          <parameter type="BonoboDockItem*" name="item" />
          <parameter type="BonoboDockPlacement" name="placement" />
          <parameter type="gint" name="band_num" />
          <parameter type="gint" name="band_position" />
          <parameter type="gint" name="offset" />
        </parameters>
      </method>
      <method name="AddDocked" cname="gnome_app_add_docked">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="BonoboDockItemBehavior" name="behavior" />
          <parameter type="BonoboDockPlacement" name="placement" />
          <parameter type="gint" name="band_num" />
          <parameter type="gint" name="band_position" />
          <parameter type="gint" name="offset" />
        </parameters>
      </method>
      <method name="AddToolbar" cname="gnome_app_add_toolbar">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="BonoboDockItemBehavior" name="behavior" />
          <parameter type="BonoboDockPlacement" name="placement" />
          <parameter type="gint" name="band_num" />
          <parameter type="gint" name="band_position" />
          <parameter type="gint" name="offset" />
        </parameters>
      </method>
      <method name="Construct" cname="gnome_app_construct">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="appname" />
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="CreateMenus" cname="gnome_app_create_menus">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
        </parameters>
      </method>
      <method name="CreateMenusCustom" cname="gnome_app_create_menus_custom">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GnomeUIBuilderData*" name="uibdata" />
        </parameters>
      </method>
      <method name="CreateMenusInterp" cname="gnome_app_create_menus_interp">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GtkCallbackMarshal" name="relay_func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy_func" />
        </parameters>
      </method>
      <method name="CreateMenusWithData" cname="gnome_app_create_menus_with_data">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="CreateToolbar" cname="gnome_app_create_toolbar">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
        </parameters>
      </method>
      <method name="CreateToolbarCustom" cname="gnome_app_create_toolbar_custom">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GnomeUIBuilderData*" name="uibdata" />
        </parameters>
      </method>
      <method name="CreateToolbarInterp" cname="gnome_app_create_toolbar_interp">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GtkCallbackMarshal" name="relay_func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy_func" />
        </parameters>
      </method>
      <method name="CreateToolbarWithData" cname="gnome_app_create_toolbar_with_data">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="EnableLayoutConfig" cname="gnome_app_enable_layout_config">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enable" />
        </parameters>
      </method>
      <method name="FillMenu" cname="gnome_app_fill_menu" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="gboolean" name="uline_accels" />
          <parameter type="gint" name="pos" />
        </parameters>
      </method>
      <method name="FillMenuCustom" cname="gnome_app_fill_menu_custom" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GnomeUIBuilderData*" name="uibdata" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="gboolean" name="uline_accels" />
          <parameter type="gint" name="pos" />
        </parameters>
      </method>
      <method name="FillMenuWithData" cname="gnome_app_fill_menu_with_data" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="gboolean" name="uline_accels" />
          <parameter type="gint" name="pos" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="FillToolbar" cname="gnome_app_fill_toolbar" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="FillToolbarCustom" cname="gnome_app_fill_toolbar_custom" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GnomeUIBuilderData*" name="uibdata" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="FillToolbarWithData" cname="gnome_app_fill_toolbar_with_data" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="FindMenuPos" cname="gnome_app_find_menu_pos" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkWidget*" name="parent" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="gint*" name="pos" />
        </parameters>
      </method>
      <method name="GetDock" cname="gnome_app_get_dock">
        <return-type type="BonoboDock*" />
      </method>
      <method name="GetDockItemByName" cname="gnome_app_get_dock_item_by_name">
        <return-type type="BonoboDockItem*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_app_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HelperGettext" cname="gnome_app_helper_gettext" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="InsertMenus" cname="gnome_app_insert_menus">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="GnomeUIInfo*" name="menuinfo" />
        </parameters>
      </method>
      <method name="InsertMenusCustom" cname="gnome_app_insert_menus_custom">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GnomeUIBuilderData*" name="uibdata" />
        </parameters>
      </method>
      <method name="InsertMenusInterp" cname="gnome_app_insert_menus_interp">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="GnomeUIInfo*" name="menuinfo" />
          <parameter type="GtkCallbackMarshal" name="relay_func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy_func" />
        </parameters>
      </method>
      <method name="InsertMenusWithData" cname="gnome_app_insert_menus_with_data">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="GnomeUIInfo*" name="menuinfo" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="InstallAppbarMenuHints" cname="gnome_app_install_appbar_menu_hints" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeAppBar*" name="appbar" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
        </parameters>
      </method>
      <method name="InstallMenuHints" cname="gnome_app_install_menu_hints">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
        </parameters>
      </method>
      <method name="InstallStatusbarMenuHints" cname="gnome_app_install_statusbar_menu_hints" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStatusbar*" name="bar" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
        </parameters>
      </method>
      <constructor cname="gnome_app_new">
        <parameters>
          <parameter type="const-gchar*" name="appname" />
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </constructor>
      <method name="RemoveMenuRange" cname="gnome_app_remove_menu_range">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="gint" name="start" />
          <parameter type="gint" name="items" />
        </parameters>
      </method>
      <method name="RemoveMenus" cname="gnome_app_remove_menus">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="gint" name="items" />
        </parameters>
      </method>
      <method name="SetContents" cname="gnome_app_set_contents">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="contents" />
        </parameters>
      </method>
      <method name="SetMenus" cname="gnome_app_set_menus">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuBar*" name="menubar" />
        </parameters>
      </method>
      <method name="SetStatusbar" cname="gnome_app_set_statusbar">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="statusbar" />
        </parameters>
      </method>
      <method name="SetStatusbarCustom" cname="gnome_app_set_statusbar_custom">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="container" />
          <parameter type="GtkWidget*" name="statusbar" />
        </parameters>
      </method>
      <method name="SetToolbar" cname="gnome_app_set_toolbar">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
        </parameters>
      </method>
      <method name="SetupToolbar" cname="gnome_app_setup_toolbar" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
          <parameter type="BonoboDockItem*" name="dock_item" />
        </parameters>
      </method>
      <method name="UiConfigureConfigurable" cname="gnome_app_ui_configure_configurable" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
        </parameters>
      </method>
    </object>
    <object name="AppBar" cname="GnomeAppBar" parent="GtkHBox">
      <field name="Priv" cname="_priv" type="GnomeAppBarPrivate*" />
      <signal name="UserResponse" cname="user_response" when="LAST" field_name="user_response">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeAppBar*" name="ab" />
        </parameters>
      </signal>
      <signal name="ClearPrompt" cname="clear_prompt" when="LAST" field_name="clear_prompt">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeAppBar*" name="ab" />
        </parameters>
      </signal>
      <property name="HasProgress" cname="has_progress" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="HasStatus" cname="has_status" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="Interactivity" cname="interactivity" type="GnomePreferencesType" readable="true" writeable="true" construct="true" />
      <method name="ClearPrompt" cname="gnome_appbar_clear_prompt">
        <return-type type="void" />
      </method>
      <method name="ClearStack" cname="gnome_appbar_clear_stack">
        <return-type type="void" />
      </method>
      <method name="GetProgress" cname="gnome_appbar_get_progress">
        <return-type type="GtkProgressBar*" />
      </method>
      <method name="GetResponse" cname="gnome_appbar_get_response">
        <return-type type="gchar*" />
      </method>
      <method name="GetStatus" cname="gnome_appbar_get_status">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gnome_appbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_appbar_new">
        <parameters>
          <parameter type="gboolean" name="has_progress" />
          <parameter type="gboolean" name="has_status" />
          <parameter type="GnomePreferencesType" name="interactivity" />
        </parameters>
      </constructor>
      <method name="Pop" cname="gnome_appbar_pop">
        <return-type type="void" />
      </method>
      <method name="Push" cname="gnome_appbar_push">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="status" />
        </parameters>
      </method>
      <method name="Refresh" cname="gnome_appbar_refresh">
        <return-type type="void" />
      </method>
      <method name="SetDefault" cname="gnome_appbar_set_default">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="default_status" />
        </parameters>
      </method>
      <method name="SetProgressPercentage" cname="gnome_appbar_set_progress_percentage">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="percentage" />
        </parameters>
      </method>
      <method name="SetPrompt" cname="gnome_appbar_set_prompt">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="prompt" />
          <parameter type="gboolean" name="modal" />
        </parameters>
      </method>
      <method name="SetStatus" cname="gnome_appbar_set_status">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="status" />
        </parameters>
      </method>
    </object>
    <object name="Client" cname="GnomeClient" parent="GtkObject">
      <field name="SmcConn" cname="smc_conn" type="gpointer" />
      <field name="ClientId" cname="client_id" type="gchar*" />
      <field name="PreviousId" cname="previous_id" type="gchar*" />
      <field name="ConfigPrefix" cname="config_prefix" type="gchar*" />
      <field name="GlobalConfigPrefix" cname="global_config_prefix" type="gchar*" />
      <field name="StaticArgs" cname="static_args" type="GList*" />
      <field name="CloneCommand" cname="clone_command" type="gchar**" />
      <field name="CurrentDirectory" cname="current_directory" type="gchar*" />
      <field name="DiscardCommand" cname="discard_command" type="gchar**" />
      <field name="Environment" cname="environment" type="GHashTable*" />
      <field name="ProcessId" cname="process_id" type="pid_t" />
      <field name="Program" cname="program" type="gchar*" />
      <field name="ResignCommand" cname="resign_command" type="gchar**" />
      <field name="RestartCommand" cname="restart_command" type="gchar**" />
      <field name="RestartStyle" cname="restart_style" type="GnomeRestartStyle" />
      <field name="ShutdownCommand" cname="shutdown_command" type="gchar**" />
      <field name="UserId" cname="user_id" type="gchar*" />
      <field name="InteractionKeys" cname="interaction_keys" type="GSList*" />
      <field name="InputId" cname="input_id" type="gint" />
      <field name="SaveStyle" cname="save_style" bits="2" type="guint" />
      <field name="InteractStyle" cname="interact_style" bits="2" type="guint" />
      <field name="State" cname="state" bits="3" type="guint" />
      <field name="Shutdown" cname="shutdown" bits="1" type="guint" />
      <field name="Fast" cname="fast" bits="1" type="guint" />
      <field name="SavePhase2Requested" cname="save_phase_2_requested" bits="1" type="guint" />
      <field name="SaveSuccessfull" cname="save_successfull" bits="1" type="guint" />
      <field name="SaveYourselfEmitted" cname="save_yourself_emitted" bits="1" type="guint" />
      <field name="Reserved" cname="reserved" type="gpointer" />
      <signal name="SaveYourself" cname="save_yourself" when="LAST" field_name="save_yourself">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeClient*" name="client" />
          <parameter type="gint" name="phase" />
          <parameter type="GnomeSaveStyle" name="save_style" />
          <parameter type="gboolean" name="shutdown" />
          <parameter type="GnomeInteractStyle" name="interact_style" />
          <parameter type="gboolean" name="fast" />
        </parameters>
      </signal>
      <signal name="Die" cname="die" when="LAST" field_name="die">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeClient*" name="client" />
        </parameters>
      </signal>
      <signal name="SaveComplete" cname="save_complete" when="FIRST" field_name="save_complete">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeClient*" name="client" />
        </parameters>
      </signal>
      <signal name="ShutdownCancelled" cname="shutdown_cancelled" when="FIRST" field_name="shutdown_cancelled">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeClient*" name="client" />
        </parameters>
      </signal>
      <signal name="Connect" cname="connect" when="FIRST" field_name="connect">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeClient*" name="client" />
          <parameter type="gboolean" name="restarted" />
        </parameters>
      </signal>
      <signal name="Disconnect" cname="disconnect" when="FIRST" field_name="disconnect">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeClient*" name="client" />
        </parameters>
      </signal>
      <method name="AddStaticArg" cname="gnome_client_add_static_arg">
        <return-type type="void" />
        <parameters>
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="Connect" cname="gnome_client_connect">
        <return-type type="void" />
      </method>
      <method name="DisableMasterConnection" cname="gnome_client_disable_master_connection" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="Disconnect" cname="gnome_client_disconnect">
        <return-type type="void" />
      </method>
      <method name="Flush" cname="gnome_client_flush">
        <return-type type="void" />
      </method>
      <method name="GetConfigPrefix" cname="gnome_client_get_config_prefix">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDesktopId" cname="gnome_client_get_desktop_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetFlags" cname="gnome_client_get_flags">
        <return-type type="GnomeClientFlags" />
      </method>
      <method name="GetGlobalConfigPrefix" cname="gnome_client_get_global_config_prefix">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetId" cname="gnome_client_get_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPreviousId" cname="gnome_client_get_previous_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gnome_client_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ModuleInfoGet" cname="gnome_client_module_info_get" shared="true">
        <return-type type="const-GnomeModuleInfo*" />
      </method>
      <constructor cname="gnome_client_new" />
      <constructor cname="gnome_client_new_without_connection" />
      <method name="RequestInteraction" cname="gnome_client_request_interaction">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDialogType" name="dialog_type" />
          <parameter type="GnomeInteractFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="RequestInteractionInterp" cname="gnome_client_request_interaction_interp">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDialogType" name="dialog_type" />
          <parameter type="GtkCallbackMarshal" name="function" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="RequestPhase2" cname="gnome_client_request_phase_2">
        <return-type type="void" />
      </method>
      <method name="RequestSave" cname="gnome_client_request_save">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeSaveStyle" name="save_style" />
          <parameter type="gboolean" name="shutdown" />
          <parameter type="GnomeInteractStyle" name="interact_style" />
          <parameter type="gboolean" name="fast" />
          <parameter type="gboolean" name="global" />
        </parameters>
      </method>
      <method name="SaveAnyDialog" cname="gnome_client_save_any_dialog">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkDialog*" name="dialog" />
        </parameters>
      </method>
      <method name="SaveErrorDialog" cname="gnome_client_save_error_dialog">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkDialog*" name="dialog" />
        </parameters>
      </method>
      <method name="SetCloneCommand" cname="gnome_client_set_clone_command">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="argc" />
          <parameter type="gchar*" array="true" name="argv" />
        </parameters>
      </method>
      <method name="SetCurrentDirectory" cname="gnome_client_set_current_directory">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="dir" />
        </parameters>
      </method>
      <method name="SetDiscardCommand" cname="gnome_client_set_discard_command">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="argc" />
          <parameter type="gchar*" array="true" name="argv" />
        </parameters>
      </method>
      <method name="SetEnvironment" cname="gnome_client_set_environment">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="value" />
        </parameters>
      </method>
      <method name="SetGlobalConfigPrefix" cname="gnome_client_set_global_config_prefix">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="prefix" />
        </parameters>
      </method>
      <method name="SetId" cname="gnome_client_set_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="id" />
        </parameters>
      </method>
      <method name="SetPriority" cname="gnome_client_set_priority">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="priority" />
        </parameters>
      </method>
      <method name="SetProcessId" cname="gnome_client_set_process_id">
        <return-type type="void" />
        <parameters>
          <parameter type="pid_t" name="pid" />
        </parameters>
      </method>
      <method name="SetProgram" cname="gnome_client_set_program">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="program" />
        </parameters>
      </method>
      <method name="SetResignCommand" cname="gnome_client_set_resign_command">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="argc" />
          <parameter type="gchar*" array="true" name="argv" />
        </parameters>
      </method>
      <method name="SetRestartCommand" cname="gnome_client_set_restart_command">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="argc" />
          <parameter type="gchar*" array="true" name="argv" />
        </parameters>
      </method>
      <method name="SetRestartStyle" cname="gnome_client_set_restart_style">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeRestartStyle" name="style" />
        </parameters>
      </method>
      <method name="SetShutdownCommand" cname="gnome_client_set_shutdown_command">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="argc" />
          <parameter type="gchar*" array="true" name="argv" />
        </parameters>
      </method>
      <method name="SetUserId" cname="gnome_client_set_user_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="id" />
        </parameters>
      </method>
    </object>
    <object name="ColorPicker" cname="GnomeColorPicker" deprecated="1" parent="GtkButton">
      <field name="Priv" cname="_priv" type="GnomeColorPickerPrivate*" />
      <signal name="ColorSet" cname="color_set" when="FIRST" field_name="color_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeColorPicker*" name="cp" />
          <parameter type="guint" name="r" />
          <parameter type="guint" name="g" />
          <parameter type="guint" name="b" />
          <parameter type="guint" name="a" />
        </parameters>
      </signal>
      <property name="Dither" cname="dither" type="gboolean" readable="true" writeable="true" />
      <property name="UseAlpha" cname="use_alpha" type="gboolean" readable="true" writeable="true" />
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" />
      <property name="Red" cname="red" type="guint" readable="true" writeable="true" />
      <property name="Green" cname="green" type="guint" readable="true" writeable="true" />
      <property name="Blue" cname="blue" type="guint" readable="true" writeable="true" />
      <property name="Alpha" cname="alpha" type="guint" readable="true" writeable="true" />
      <method name="GetD" cname="gnome_color_picker_get_d" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="r" />
          <parameter type="gdouble*" name="g" />
          <parameter type="gdouble*" name="b" />
          <parameter type="gdouble*" name="a" />
        </parameters>
      </method>
      <method name="GetDither" cname="gnome_color_picker_get_dither" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="GetI16" cname="gnome_color_picker_get_i16" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gushort*" name="r" />
          <parameter type="gushort*" name="g" />
          <parameter type="gushort*" name="b" />
          <parameter type="gushort*" name="a" />
        </parameters>
      </method>
      <method name="GetI8" cname="gnome_color_picker_get_i8" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint8*" name="r" />
          <parameter type="guint8*" name="g" />
          <parameter type="guint8*" name="b" />
          <parameter type="guint8*" name="a" />
        </parameters>
      </method>
      <method name="GetTitle" cname="gnome_color_picker_get_title" deprecated="1">
        <return-type type="const-char*" />
      </method>
      <method name="GetType" cname="gnome_color_picker_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseAlpha" cname="gnome_color_picker_get_use_alpha" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gnome_color_picker_new" deprecated="1" />
      <method name="SetD" cname="gnome_color_picker_set_d" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="r" />
          <parameter type="gdouble" name="g" />
          <parameter type="gdouble" name="b" />
          <parameter type="gdouble" name="a" />
        </parameters>
      </method>
      <method name="SetDither" cname="gnome_color_picker_set_dither" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="dither" />
        </parameters>
      </method>
      <method name="SetI16" cname="gnome_color_picker_set_i16" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gushort" name="r" />
          <parameter type="gushort" name="g" />
          <parameter type="gushort" name="b" />
          <parameter type="gushort" name="a" />
        </parameters>
      </method>
      <method name="SetI8" cname="gnome_color_picker_set_i8" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint8" name="r" />
          <parameter type="guint8" name="g" />
          <parameter type="guint8" name="b" />
          <parameter type="guint8" name="a" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gnome_color_picker_set_title" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetUseAlpha" cname="gnome_color_picker_set_use_alpha" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_alpha" />
        </parameters>
      </method>
    </object>
    <object name="DateEdit" cname="GnomeDateEdit" parent="GtkHBox">
      <field name="Priv" cname="_priv" type="GnomeDateEditPrivate*" />
      <property name="Time" cname="time" type="ulong" readable="true" writeable="true" />
      <property name="DateeditFlags" cname="dateedit_flags" type="GnomeDateEditFlags" readable="true" writeable="true" />
      <property name="LowerHour" cname="lower_hour" type="gint" readable="true" writeable="true" />
      <property name="UpperHour" cname="upper_hour" type="gint" readable="true" writeable="true" />
      <property name="InitialTime" cname="initial_time" type="ulong" readable="true" writeable="true" />
      <signal name="TimeChanged" cname="time_changed" when="FIRST" field_name="time_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDateEdit*" name="gde" />
        </parameters>
      </signal>
      <signal name="DateChanged" cname="date_changed" when="FIRST" field_name="date_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDateEdit*" name="gde" />
        </parameters>
      </signal>
      <method name="Construct" cname="gnome_date_edit_construct">
        <return-type type="void" />
        <parameters>
          <parameter type="time_t" name="the_time" />
          <parameter type="GnomeDateEditFlags" name="flags" />
        </parameters>
      </method>
      <method name="GetDate" cname="gnome_date_edit_get_date" deprecated="1">
        <return-type type="time_t" />
      </method>
      <method name="GetFlags" cname="gnome_date_edit_get_flags">
        <return-type type="int" />
      </method>
      <method name="GetInitialTime" cname="gnome_date_edit_get_initial_time">
        <return-type type="time_t" />
      </method>
      <method name="GetTime" cname="gnome_date_edit_get_time">
        <return-type type="time_t" />
      </method>
      <method name="GetType" cname="gnome_date_edit_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_date_edit_new">
        <parameters>
          <parameter type="time_t" name="the_time" />
          <parameter type="gboolean" name="show_time" />
          <parameter type="gboolean" name="use_24_format" />
        </parameters>
      </constructor>
      <constructor cname="gnome_date_edit_new_flags">
        <parameters>
          <parameter type="time_t" name="the_time" />
          <parameter type="GnomeDateEditFlags" name="flags" />
        </parameters>
      </constructor>
      <method name="SetFlags" cname="gnome_date_edit_set_flags">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDateEditFlags" name="flags" />
        </parameters>
      </method>
      <method name="SetPopupRange" cname="gnome_date_edit_set_popup_range">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="low_hour" />
          <parameter type="int" name="up_hour" />
        </parameters>
      </method>
      <method name="SetTime" cname="gnome_date_edit_set_time">
        <return-type type="void" />
        <parameters>
          <parameter type="time_t" name="the_time" />
        </parameters>
      </method>
    </object>
    <object name="Druid" cname="GnomeDruid" deprecated="1" parent="GtkContainer">
      <field name="Help" cname="help" type="GtkWidget*" />
      <field name="Back" cname="back" type="GtkWidget*" />
      <field name="Next" cname="next" type="GtkWidget*" />
      <field name="Cancel" cname="cancel" type="GtkWidget*" />
      <field name="Finish" cname="finish" type="GtkWidget*" />
      <field name="Priv" cname="_priv" type="GnomeDruidPrivate*" />
      <signal name="Cancel" cname="cancel" when="LAST" field_name="cancel">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruid*" name="druid" />
        </parameters>
      </signal>
      <signal name="Help" cname="help" when="LAST" field_name="help">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruid*" name="druid" />
        </parameters>
      </signal>
      <property name="ShowFinish" cname="show_finish" type="gboolean" readable="true" writeable="true" />
      <property name="ShowHelp" cname="show_help" type="gboolean" readable="true" writeable="true" />
      <method name="AppendPage" cname="gnome_druid_append_page" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="page" />
        </parameters>
      </method>
      <method name="ConstructWithWindow" cname="gnome_druid_construct_with_window" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="gboolean" name="close_on_cancel" />
          <parameter type="GtkWidget**" name="window" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_druid_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertPage" cname="gnome_druid_insert_page" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="back_page" />
          <parameter type="GnomeDruidPage*" name="page" />
        </parameters>
      </method>
      <constructor cname="gnome_druid_new" deprecated="1" />
      <constructor cname="gnome_druid_new_with_window" deprecated="1">
        <parameters>
          <parameter type="const-char*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="gboolean" name="close_on_cancel" />
          <parameter type="GtkWidget**" name="window" />
        </parameters>
      </constructor>
      <method name="PrependPage" cname="gnome_druid_prepend_page" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="page" />
        </parameters>
      </method>
      <method name="SetButtonsSensitive" cname="gnome_druid_set_buttons_sensitive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="back_sensitive" />
          <parameter type="gboolean" name="next_sensitive" />
          <parameter type="gboolean" name="cancel_sensitive" />
          <parameter type="gboolean" name="help_sensitive" />
        </parameters>
      </method>
      <method name="SetPage" cname="gnome_druid_set_page" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="page" />
        </parameters>
      </method>
      <method name="SetShowFinish" cname="gnome_druid_set_show_finish" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_finish" />
        </parameters>
      </method>
      <method name="SetShowHelp" cname="gnome_druid_set_show_help" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_help" />
        </parameters>
      </method>
    </object>
    <object name="DruidPage" cname="GnomeDruidPage" deprecated="1" parent="GtkBin">
      <field name="Priv" cname="_priv" type="GnomeDruidPagePrivate*" />
      <signal name="Next" cname="next" when="LAST" field_name="next">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="druid_page" />
          <parameter type="GtkWidget*" name="druid" />
        </parameters>
      </signal>
      <signal name="Prepare" cname="prepare" when="LAST" field_name="prepare">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="druid_page" />
          <parameter type="GtkWidget*" name="druid" />
        </parameters>
      </signal>
      <signal name="Back" cname="back" when="LAST" field_name="back">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="druid_page" />
          <parameter type="GtkWidget*" name="druid" />
        </parameters>
      </signal>
      <signal name="Finish" cname="finish" when="LAST" field_name="finish">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="druid_page" />
          <parameter type="GtkWidget*" name="druid" />
        </parameters>
      </signal>
      <signal name="Cancel" cname="cancel" when="LAST" field_name="cancel">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="druid_page" />
          <parameter type="GtkWidget*" name="druid" />
        </parameters>
      </signal>
      <virtual_method name="ConfigureCanvas" cname="configure_canvas">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="druid_page" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSidebarShown" cname="set_sidebar_shown">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeDruidPage*" name="druid_page" />
          <parameter type="gboolean" name="sidebar_shown" />
        </parameters>
      </virtual_method>
      <method name="Back" cname="gnome_druid_page_back" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="Cancel" cname="gnome_druid_page_cancel" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="Finish" cname="gnome_druid_page_finish" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gnome_druid_page_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_druid_page_new" deprecated="1" />
      <method name="Next" cname="gnome_druid_page_next" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="Prepare" cname="gnome_druid_page_prepare" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="DruidPageEdge" cname="GnomeDruidPageEdge" deprecated="1" parent="GnomeDruidPage">
      <field name="Title" cname="title" type="gchar*" access="public" />
      <field name="Text" cname="text" type="gchar*" access="public" />
      <field name="LogoImage" cname="logo_image" type="GdkPixbuf*" access="public" />
      <field name="WatermarkImage" cname="watermark_image" type="GdkPixbuf*" access="public" />
      <field name="TopWatermarkImage" cname="top_watermark_image" type="GdkPixbuf*" access="public" />
      <field name="BackgroundColor" cname="background_color" type="GdkColor" access="public" />
      <field name="TextboxColor" cname="textbox_color" type="GdkColor" access="public" />
      <field name="LogoBackgroundColor" cname="logo_background_color" type="GdkColor" access="public" />
      <field name="TitleColor" cname="title_color" type="GdkColor" access="public" />
      <field name="TextColor" cname="text_color" type="GdkColor" access="public" />
      <field name="Position" cname="position" bits="2" type="guint" access="public" />
      <field name="Priv" cname="_priv" type="GnomeDruidPageEdgePrivate*" />
      <method name="Construct" cname="gnome_druid_page_edge_construct" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeEdgePosition" name="position" />
          <parameter type="gboolean" name="antialiased" />
          <parameter type="const-gchar*" name="title" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="GdkPixbuf*" name="logo" />
          <parameter type="GdkPixbuf*" name="watermark" />
          <parameter type="GdkPixbuf*" name="top_watermark" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_druid_page_edge_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_druid_page_edge_new" deprecated="1">
        <parameters>
          <parameter type="GnomeEdgePosition" name="position" />
        </parameters>
      </constructor>
      <constructor cname="gnome_druid_page_edge_new_aa" deprecated="1">
        <parameters>
          <parameter type="GnomeEdgePosition" name="position" />
        </parameters>
      </constructor>
      <constructor cname="gnome_druid_page_edge_new_with_vals" deprecated="1">
        <parameters>
          <parameter type="GnomeEdgePosition" name="position" />
          <parameter type="gboolean" name="antialiased" />
          <parameter type="const-gchar*" name="title" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="GdkPixbuf*" name="logo" />
          <parameter type="GdkPixbuf*" name="watermark" />
          <parameter type="GdkPixbuf*" name="top_watermark" />
        </parameters>
      </constructor>
      <method name="SetBgColor" cname="gnome_druid_page_edge_set_bg_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetLogo" cname="gnome_druid_page_edge_set_logo" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="logo_image" />
        </parameters>
      </method>
      <method name="SetLogoBgColor" cname="gnome_druid_page_edge_set_logo_bg_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetText" cname="gnome_druid_page_edge_set_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetTextColor" cname="gnome_druid_page_edge_set_text_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetTextboxColor" cname="gnome_druid_page_edge_set_textbox_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gnome_druid_page_edge_set_title" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetTitleColor" cname="gnome_druid_page_edge_set_title_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetTopWatermark" cname="gnome_druid_page_edge_set_top_watermark" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="top_watermark_image" />
        </parameters>
      </method>
      <method name="SetWatermark" cname="gnome_druid_page_edge_set_watermark" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="watermark" />
        </parameters>
      </method>
    </object>
    <object name="DruidPageStandard" cname="GnomeDruidPageStandard" deprecated="1" parent="GnomeDruidPage">
      <field name="Vbox" cname="vbox" type="GtkWidget*" access="public" />
      <field name="Title" cname="title" type="gchar*" access="public" />
      <field name="Logo" cname="logo" type="GdkPixbuf*" access="public" />
      <field name="TopWatermark" cname="top_watermark" type="GdkPixbuf*" access="public" />
      <field name="TitleForeground" cname="title_foreground" type="GdkColor" access="public" />
      <field name="Background" cname="background" type="GdkColor" access="public" />
      <field name="LogoBackground" cname="logo_background" type="GdkColor" access="public" />
      <field name="ContentsBackground" cname="contents_background" type="GdkColor" access="public" />
      <field name="Priv" cname="_priv" type="GnomeDruidPageStandardPrivate*" />
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" />
      <property name="Logo" cname="logo" type="GdkPixbuf" readable="true" writeable="true" />
      <property name="TopWatermark" cname="top_watermark" type="GdkPixbuf" readable="true" writeable="true" />
      <property name="TitleForeground" cname="title_foreground" type="gchar*" writeable="true" />
      <property name="TitleForegroundGdk" cname="title_foreground_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="TitleForegroundSet" cname="title_foreground_set" type="gboolean" readable="true" writeable="true" />
      <property name="Background" cname="background" type="gchar*" writeable="true" />
      <property name="BackgroundGdk" cname="background_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="BackgroundSet" cname="background_set" type="gboolean" readable="true" writeable="true" />
      <property name="ContentsBackground" cname="contents_background" type="gchar*" writeable="true" />
      <property name="ContentsBackgroundGdk" cname="contents_background_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="ContentsBackgroundSet" cname="contents_background_set" type="gboolean" readable="true" writeable="true" />
      <property name="LogoBackground" cname="logo_background" type="gchar*" writeable="true" />
      <property name="LogoBackgroundGdk" cname="logo_background_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="LogoBackgroundSet" cname="logo_background_set" type="gboolean" readable="true" writeable="true" />
      <method name="AppendItem" cname="gnome_druid_page_standard_append_item" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="question" />
          <parameter type="GtkWidget*" name="item" />
          <parameter type="const-gchar*" name="additional_info" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_druid_page_standard_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_druid_page_standard_new" deprecated="1" />
      <constructor cname="gnome_druid_page_standard_new_with_vals" deprecated="1">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GdkPixbuf*" name="logo" />
          <parameter type="GdkPixbuf*" name="top_watermark" />
        </parameters>
      </constructor>
      <method name="SetBackground" cname="gnome_druid_page_standard_set_background" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetContentsBackground" cname="gnome_druid_page_standard_set_contents_background" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetLogo" cname="gnome_druid_page_standard_set_logo" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="logo_image" />
        </parameters>
      </method>
      <method name="SetLogoBackground" cname="gnome_druid_page_standard_set_logo_background" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gnome_druid_page_standard_set_title" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetTitleForeground" cname="gnome_druid_page_standard_set_title_foreground" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetTopWatermark" cname="gnome_druid_page_standard_set_top_watermark" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="top_watermark_image" />
        </parameters>
      </method>
    </object>
    <object name="Entry" cname="GnomeEntry" deprecated="1" parent="GtkCombo">
      <field name="Priv" cname="_priv" type="GnomeEntryPrivate*" />
      <signal name="Activate" cname="activate" when="LAST" field_name="activate">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeEntry*" name="entry" />
        </parameters>
      </signal>
      <property name="HistoryId" cname="history_id" type="gchar*" readable="true" writeable="true" />
      <property name="GtkEntry" cname="gtk_entry" type="GtkEntry" readable="true" />
      <implements>
        <interface cname="GtkEditable" />
      </implements>
      <method name="AppendHistory" cname="gnome_entry_append_history" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="save" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="ClearHistory" cname="gnome_entry_clear_history" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetHistoryId" cname="gnome_entry_get_history_id" deprecated="1">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetMaxSaved" cname="gnome_entry_get_max_saved" deprecated="1">
        <return-type type="guint" />
      </method>
      <method name="GetType" cname="gnome_entry_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GtkEntry" cname="gnome_entry_gtk_entry" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <constructor cname="gnome_entry_new" deprecated="1">
        <parameters>
          <parameter type="const-gchar*" name="history_id" />
        </parameters>
      </constructor>
      <method name="PrependHistory" cname="gnome_entry_prepend_history" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="save" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetHistoryId" cname="gnome_entry_set_history_id" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="history_id" />
        </parameters>
      </method>
      <method name="SetMaxSaved" cname="gnome_entry_set_max_saved" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="max_saved" />
        </parameters>
      </method>
    </object>
    <object name="FileEntry" cname="GnomeFileEntry" deprecated="1" parent="GtkVBox">
      <field name="Fsw" cname="fsw" type="GtkWidget*" />
      <field name="DefaultPath" cname="default_path" type="char*" />
      <field name="Priv" cname="_priv" type="GnomeFileEntryPrivate*" />
      <signal name="BrowseClicked" cname="browse_clicked" when="LAST" field_name="browse_clicked">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeFileEntry*" name="fentry" />
        </parameters>
      </signal>
      <signal name="Activate" cname="activate" when="LAST" field_name="activate">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeFileEntry*" name="fentry" />
        </parameters>
      </signal>
      <property name="HistoryId" cname="history_id" type="gchar*" readable="true" writeable="true" />
      <property name="BrowseDialogTitle" cname="browse_dialog_title" type="gchar*" readable="true" writeable="true" />
      <property name="DirectoryEntry" cname="directory_entry" type="gboolean" readable="true" writeable="true" />
      <property name="Modal" cname="modal" type="gboolean" readable="true" writeable="true" />
      <property name="Filename" cname="filename" type="gchar*" readable="true" writeable="true" />
      <property name="DefaultPath" cname="default_path" type="gchar*" readable="true" writeable="true" />
      <property name="GnomeEntry" cname="gnome_entry" type="GnomeEntry" readable="true" />
      <property name="GtkEntry" cname="gtk_entry" type="GtkEntry" readable="true" />
      <property name="UseFilechooser" cname="use_filechooser" type="gboolean" readable="true" writeable="true" />
      <property name="FilechooserAction" cname="filechooser_action" type="GtkFileChooserAction" readable="true" writeable="true" />
      <implements>
        <interface cname="GtkEditable" />
      </implements>
      <method name="Construct" cname="gnome_file_entry_construct" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="history_id" />
          <parameter type="const-char*" name="browse_dialog_title" />
        </parameters>
      </method>
      <method name="GetDirectoryEntry" cname="gnome_file_entry_get_directory_entry" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="GetFullPath" cname="gnome_file_entry_get_full_path" deprecated="1">
        <return-type type="char*" />
        <parameters>
          <parameter type="gboolean" name="file_must_exist" />
        </parameters>
      </method>
      <method name="GetModal" cname="gnome_file_entry_get_modal" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gnome_file_entry_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GnomeEntry" cname="gnome_file_entry_gnome_entry" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GtkEntry" cname="gnome_file_entry_gtk_entry" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <constructor cname="gnome_file_entry_new" deprecated="1">
        <parameters>
          <parameter type="const-char*" name="history_id" />
          <parameter type="const-char*" name="browse_dialog_title" />
        </parameters>
      </constructor>
      <method name="SetDefaultPath" cname="gnome_file_entry_set_default_path" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
        </parameters>
      </method>
      <method name="SetDirectory" cname="gnome_file_entry_set_directory" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="directory_entry" />
        </parameters>
      </method>
      <method name="SetDirectoryEntry" cname="gnome_file_entry_set_directory_entry" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="directory_entry" />
        </parameters>
      </method>
      <method name="SetFilename" cname="gnome_file_entry_set_filename" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="SetModal" cname="gnome_file_entry_set_modal" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_modal" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gnome_file_entry_set_title" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="browse_dialog_title" />
        </parameters>
      </method>
    </object>
    <object name="FontPicker" cname="GnomeFontPicker" deprecated="1" parent="GtkButton">
      <field name="Priv" cname="_priv" type="GnomeFontPickerPrivate*" />
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" />
      <property name="Mode" cname="mode" type="GnomeFontPickerMode" readable="true" writeable="true" />
      <property name="FontName" cname="font_name" type="gchar*" readable="true" writeable="true" />
      <property name="Font" cname="font" type="gpointer" readable="true" />
      <property name="PreviewText" cname="preview_text" type="gchar*" readable="true" writeable="true" />
      <property name="UseFontInLabel" cname="use-font-in-label" type="gboolean" readable="true" writeable="true" />
      <property name="LabelFontSize" cname="label-font-size" type="gint" readable="true" writeable="true" />
      <property name="ShowSize" cname="show-size" type="gboolean" readable="true" writeable="true" />
      <signal name="FontSet" cname="font_set" when="FIRST" field_name="font_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeFontPicker*" name="gfp" />
          <parameter type="const-gchar*" name="font_name" />
        </parameters>
      </signal>
      <method name="FiSetShowSize" cname="gnome_font_picker_fi_set_show_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_size" />
        </parameters>
      </method>
      <method name="FiSetUseFontInLabel" cname="gnome_font_picker_fi_set_use_font_in_label" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_font_in_label" />
          <parameter type="gint" name="size" />
        </parameters>
      </method>
      <method name="GetFont" cname="gnome_font_picker_get_font" deprecated="1">
        <return-type type="GdkFont*" />
      </method>
      <method name="GetFontName" cname="gnome_font_picker_get_font_name" deprecated="1">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetMode" cname="gnome_font_picker_get_mode" deprecated="1">
        <return-type type="GnomeFontPickerMode" />
      </method>
      <method name="GetPreviewText" cname="gnome_font_picker_get_preview_text" deprecated="1">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetTitle" cname="gnome_font_picker_get_title" deprecated="1">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gnome_font_picker_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_font_picker_new" deprecated="1" />
      <method name="SetFontName" cname="gnome_font_picker_set_font_name" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </method>
      <method name="SetMode" cname="gnome_font_picker_set_mode" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeFontPickerMode" name="mode" />
        </parameters>
      </method>
      <method name="SetPreviewText" cname="gnome_font_picker_set_preview_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gnome_font_picker_set_title" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="UwGetWidget" cname="gnome_font_picker_uw_get_widget" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <method name="UwSetWidget" cname="gnome_font_picker_uw_set_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </object>
    <object name="HRef" cname="GnomeHRef" deprecated="1" parent="GtkButton">
      <field name="Priv" cname="_priv" type="GnomeHRefPrivate*" />
      <property name="Url" cname="url" type="gchar*" readable="true" writeable="true" />
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" />
      <method name="GetLabel" cname="gnome_href_get_label" deprecated="1">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetText" cname="gnome_href_get_text" deprecated="1">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gnome_href_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUrl" cname="gnome_href_get_url" deprecated="1">
        <return-type type="const-gchar*" />
      </method>
      <constructor cname="gnome_href_new" deprecated="1">
        <parameters>
          <parameter type="const-gchar*" name="url" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </constructor>
      <method name="SetLabel" cname="gnome_href_set_label" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetText" cname="gnome_href_set_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetUrl" cname="gnome_href_set_url" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="url" />
        </parameters>
      </method>
    </object>
    <object name="IconEntry" cname="GnomeIconEntry" parent="GtkVBox">
      <field name="Priv" cname="_priv" type="GnomeIconEntryPrivate*" />
      <signal name="Changed" cname="changed" when="LAST" field_name="changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconEntry*" name="ientry" />
        </parameters>
      </signal>
      <signal name="Browse" cname="browse" when="LAST" field_name="browse">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconEntry*" name="ientry" />
        </parameters>
      </signal>
      <property name="HistoryId" cname="history_id" type="gchar*" readable="true" writeable="true" />
      <property name="BrowseDialogTitle" cname="browse_dialog_title" type="gchar*" readable="true" writeable="true" />
      <property name="PixmapSubdir" cname="pixmap_subdir" type="gchar*" readable="true" writeable="true" />
      <property name="Filename" cname="filename" type="gchar*" readable="true" writeable="true" />
      <property name="PickDialog" cname="pick_dialog" type="GtkDialog" readable="true" />
      <method name="Construct" cname="gnome_icon_entry_construct">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="history_id" />
          <parameter type="const-gchar*" name="browse_dialog_title" />
        </parameters>
      </method>
      <method name="GetFilename" cname="gnome_icon_entry_get_filename">
        <return-type type="gchar*" />
      </method>
      <method name="GetType" cname="gnome_icon_entry_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GnomeEntry" cname="gnome_icon_entry_gnome_entry">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GnomeFileEntry" cname="gnome_icon_entry_gnome_file_entry">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GtkEntry" cname="gnome_icon_entry_gtk_entry">
        <return-type type="GtkWidget*" />
      </method>
      <constructor cname="gnome_icon_entry_new">
        <parameters>
          <parameter type="const-gchar*" name="history_id" />
          <parameter type="const-gchar*" name="browse_dialog_title" />
        </parameters>
      </constructor>
      <method name="PickDialog" cname="gnome_icon_entry_pick_dialog">
        <return-type type="GtkWidget*" />
      </method>
      <method name="SetBrowseDialogTitle" cname="gnome_icon_entry_set_browse_dialog_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="browse_dialog_title" />
        </parameters>
      </method>
      <method name="SetFilename" cname="gnome_icon_entry_set_filename">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetHistoryId" cname="gnome_icon_entry_set_history_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="history_id" />
        </parameters>
      </method>
      <method name="SetIcon" cname="gnome_icon_entry_set_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetMaxSaved" cname="gnome_icon_entry_set_max_saved">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="max_saved" />
        </parameters>
      </method>
      <method name="SetPixmapSubdir" cname="gnome_icon_entry_set_pixmap_subdir">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="subdir" />
        </parameters>
      </method>
    </object>
    <object name="IconList" cname="GnomeIconList" deprecated="1" parent="GnomeCanvas">
      <field name="Adj" cname="adj" type="GtkAdjustment*" />
      <field name="Hadj" cname="hadj" type="GtkAdjustment*" />
      <field name="Priv" cname="_priv" type="GnomeIconListPrivate*" />
      <signal name="SelectIcon" cname="select_icon" when="FIRST" field_name="select_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconList*" name="gil" />
          <parameter type="gint" name="num" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="UnselectIcon" cname="unselect_icon" when="FIRST" field_name="unselect_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconList*" name="gil" />
          <parameter type="gint" name="num" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="FocusIcon" cname="focus_icon" when="FIRST" field_name="focus_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconList*" name="gil" />
          <parameter type="gint" name="num" />
        </parameters>
      </signal>
      <signal name="TextChanged" cname="text_changed" when="LAST" field_name="text_changed">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeIconList*" name="gil" />
          <parameter type="gint" name="num" />
          <parameter type="const-char*" name="new_text" />
        </parameters>
      </signal>
      <signal name="MoveCursor" cname="move_cursor" when="LAST" field_name="move_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconList*" name="gil" />
          <parameter type="GtkDirectionType" name="dir" />
          <parameter type="gboolean" name="clear_selection" />
        </parameters>
      </signal>
      <signal name="ToggleCursorSelection" cname="toggle_cursor_selection" when="LAST" field_name="toggle_cursor_selection">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconList*" name="gil" />
        </parameters>
      </signal>
      <virtual_method name="Unused" cname="unused">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconList*" name="unused" />
        </parameters>
      </virtual_method>
      <method name="Append" cname="gnome_icon_list_append" deprecated="1">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="icon_filename" />
          <parameter type="const-char*" name="text" />
        </parameters>
      </method>
      <method name="AppendPixbuf" cname="gnome_icon_list_append_pixbuf" deprecated="1">
        <return-type type="int" />
        <parameters>
          <parameter type="GdkPixbuf*" name="im" />
          <parameter type="const-char*" name="icon_filename" />
          <parameter type="const-char*" name="text" />
        </parameters>
      </method>
      <method name="Clear" cname="gnome_icon_list_clear" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Construct" cname="gnome_icon_list_construct" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="icon_width" />
          <parameter type="GtkAdjustment*" name="adj" />
          <parameter type="int" name="flags" />
        </parameters>
      </method>
      <method name="FindIconFromData" cname="gnome_icon_list_find_icon_from_data" deprecated="1">
        <return-type type="int" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="FindIconFromFilename" cname="gnome_icon_list_find_icon_from_filename" deprecated="1">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="FocusIcon" cname="gnome_icon_list_focus_icon" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="idx" />
        </parameters>
      </method>
      <method name="Freeze" cname="gnome_icon_list_freeze" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetIconAt" cname="gnome_icon_list_get_icon_at" deprecated="1">
        <return-type type="int" />
        <parameters>
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="GetIconData" cname="gnome_icon_list_get_icon_data" deprecated="1">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="int" name="pos" />
        </parameters>
      </method>
      <method name="GetIconFilename" cname="gnome_icon_list_get_icon_filename" deprecated="1">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="int" name="idx" />
        </parameters>
      </method>
      <method name="GetIconPixbufItem" cname="gnome_icon_list_get_icon_pixbuf_item" deprecated="1">
        <return-type type="GnomeCanvasPixbuf*" />
        <parameters>
          <parameter type="int" name="idx" />
        </parameters>
      </method>
      <method name="GetIconTextItem" cname="gnome_icon_list_get_icon_text_item" deprecated="1">
        <return-type type="GnomeIconTextItem*" />
        <parameters>
          <parameter type="int" name="idx" />
        </parameters>
      </method>
      <method name="GetItemsPerLine" cname="gnome_icon_list_get_items_per_line" deprecated="1">
        <return-type type="int" />
      </method>
      <method name="GetNumIcons" cname="gnome_icon_list_get_num_icons" deprecated="1">
        <return-type type="guint" />
      </method>
      <method name="GetSelection" cname="gnome_icon_list_get_selection" deprecated="1">
        <return-type type="GList*" />
      </method>
      <method name="GetSelectionMode" cname="gnome_icon_list_get_selection_mode" deprecated="1">
        <return-type type="GtkSelectionMode" />
      </method>
      <method name="GetType" cname="gnome_icon_list_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IconIsVisible" cname="gnome_icon_list_icon_is_visible" deprecated="1">
        <return-type type="GtkVisibility" />
        <parameters>
          <parameter type="int" name="pos" />
        </parameters>
      </method>
      <method name="Insert" cname="gnome_icon_list_insert" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pos" />
          <parameter type="const-char*" name="icon_filename" />
          <parameter type="const-char*" name="text" />
        </parameters>
      </method>
      <method name="InsertPixbuf" cname="gnome_icon_list_insert_pixbuf" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pos" />
          <parameter type="GdkPixbuf*" name="im" />
          <parameter type="const-char*" name="icon_filename" />
          <parameter type="const-char*" name="text" />
        </parameters>
      </method>
      <method name="Moveto" cname="gnome_icon_list_moveto" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pos" />
          <parameter type="double" name="yalign" />
        </parameters>
      </method>
      <constructor cname="gnome_icon_list_new" deprecated="1">
        <parameters>
          <parameter type="guint" name="icon_width" />
          <parameter type="GtkAdjustment*" name="adj" />
          <parameter type="int" name="flags" />
        </parameters>
      </constructor>
      <method name="Remove" cname="gnome_icon_list_remove" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pos" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gnome_icon_list_select_all" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="SelectIcon" cname="gnome_icon_list_select_icon" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pos" />
        </parameters>
      </method>
      <method name="SetColSpacing" cname="gnome_icon_list_set_col_spacing" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pixels" />
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gnome_icon_list_set_hadjustment" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="hadj" />
        </parameters>
      </method>
      <method name="SetIconBorder" cname="gnome_icon_list_set_icon_border" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pixels" />
        </parameters>
      </method>
      <method name="SetIconData" cname="gnome_icon_list_set_icon_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="idx" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetIconDataFull" cname="gnome_icon_list_set_icon_data_full" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pos" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetIconWidth" cname="gnome_icon_list_set_icon_width" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="w" />
        </parameters>
      </method>
      <method name="SetRowSpacing" cname="gnome_icon_list_set_row_spacing" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pixels" />
        </parameters>
      </method>
      <method name="SetSelectionMode" cname="gnome_icon_list_set_selection_mode" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSelectionMode" name="mode" />
        </parameters>
      </method>
      <method name="SetSeparators" cname="gnome_icon_list_set_separators" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="sep" />
        </parameters>
      </method>
      <method name="SetTextSpacing" cname="gnome_icon_list_set_text_spacing" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pixels" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gnome_icon_list_set_vadjustment" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="vadj" />
        </parameters>
      </method>
      <method name="Thaw" cname="gnome_icon_list_thaw" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UnselectAll" cname="gnome_icon_list_unselect_all" deprecated="1">
        <return-type type="int" />
      </method>
      <method name="UnselectIcon" cname="gnome_icon_list_unselect_icon" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="pos" />
        </parameters>
      </method>
    </object>
    <object name="IconSelection" cname="GnomeIconSelection" parent="GtkVBox">
      <field name="Priv" cname="_priv" type="GnomeIconSelectionPrivate*" />
      <method name="AddDefaults" cname="gnome_icon_selection_add_defaults">
        <return-type type="void" />
      </method>
      <method name="AddDirectory" cname="gnome_icon_selection_add_directory">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="dir" />
        </parameters>
      </method>
      <method name="Clear" cname="gnome_icon_selection_clear">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="not_shown" />
        </parameters>
      </method>
      <method name="GetBox" cname="gnome_icon_selection_get_box">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetGil" cname="gnome_icon_selection_get_gil">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetIcon" cname="gnome_icon_selection_get_icon">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gboolean" name="full_path" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_icon_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_icon_selection_new" />
      <method name="SelectIcon" cname="gnome_icon_selection_select_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="ShowIcons" cname="gnome_icon_selection_show_icons">
        <return-type type="void" />
      </method>
      <method name="StopLoading" cname="gnome_icon_selection_stop_loading">
        <return-type type="void" />
      </method>
    </object>
    <object name="IconTextItem" cname="GnomeIconTextItem" deprecated="1" parent="GnomeCanvasItem">
      <field name="X" cname="x" type="int" />
      <field name="Y" cname="y" type="int" />
      <field name="Width" cname="width" type="int" />
      <field name="Fontname" cname="fontname" type="char*" />
      <field name="Text" cname="text" type="char*" />
      <field name="Editing" cname="editing" bits="1" type="unsigned int" />
      <field name="Selected" cname="selected" bits="1" type="unsigned int" />
      <field name="Focused" cname="focused" bits="1" type="unsigned int" />
      <field name="IsEditable" cname="is_editable" bits="1" type="unsigned int" />
      <field name="IsTextAllocated" cname="is_text_allocated" bits="1" type="unsigned int" />
      <field name="Priv" cname="_priv" type="GnomeIconTextItemPrivate*" />
      <signal name="TextChanged" cname="text_changed" when="LAST" field_name="text_changed">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeIconTextItem*" name="iti" />
        </parameters>
      </signal>
      <signal name="HeightChanged" cname="height_changed" when="LAST" field_name="height_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconTextItem*" name="iti" />
        </parameters>
      </signal>
      <signal name="WidthChanged" cname="width_changed" when="LAST" field_name="width_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconTextItem*" name="iti" />
        </parameters>
      </signal>
      <signal name="EditingStarted" cname="editing_started" when="LAST" field_name="editing_started">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconTextItem*" name="iti" />
        </parameters>
      </signal>
      <signal name="EditingStopped" cname="editing_stopped" when="LAST" field_name="editing_stopped">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconTextItem*" name="iti" />
        </parameters>
      </signal>
      <signal name="SelectionStarted" cname="selection_started" when="FIRST" field_name="selection_started">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconTextItem*" name="iti" />
        </parameters>
      </signal>
      <signal name="SelectionStopped" cname="selection_stopped" when="FIRST" field_name="selection_stopped">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconTextItem*" name="iti" />
        </parameters>
      </signal>
      <virtual_method name="CreateEntry" cname="create_entry">
        <return-type type="GtkEntry*" />
        <parameters>
          <parameter type="GnomeIconTextItem*" name="iti" />
        </parameters>
      </virtual_method>
      <method name="Configure" cname="gnome_icon_text_item_configure" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
          <parameter type="int" name="width" />
          <parameter type="const-char*" name="fontname" />
          <parameter type="const-char*" name="text" />
          <parameter type="gboolean" name="is_editable" />
          <parameter type="gboolean" name="is_static" />
        </parameters>
      </method>
      <method name="Focus" cname="gnome_icon_text_item_focus" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="focused" />
        </parameters>
      </method>
      <method name="GetEditable" cname="gnome_icon_text_item_get_editable" deprecated="1">
        <return-type type="GtkEditable*" />
      </method>
      <method name="GetText" cname="gnome_icon_text_item_get_text" deprecated="1">
        <return-type type="const-char*" />
      </method>
      <method name="GetType" cname="gnome_icon_text_item_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Select" cname="gnome_icon_text_item_select" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="sel" />
        </parameters>
      </method>
      <method name="Setxy" cname="gnome_icon_text_item_setxy" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="StartEditing" cname="gnome_icon_text_item_start_editing" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="StopEditing" cname="gnome_icon_text_item_stop_editing" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="accept" />
        </parameters>
      </method>
    </object>
    <object name="IconTheme" cname="GnomeIconTheme">
      <signal name="Changed" cname="changed" when="LAST" field_name="changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeIconTheme*" name="icon_theme" />
        </parameters>
      </signal>
      <method name="AppendSearchPath" cname="gnome_icon_theme_append_search_path" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
        </parameters>
      </method>
      <method name="GetAllowSvg" cname="gnome_icon_theme_get_allow_svg" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="GetExampleIconName" cname="gnome_icon_theme_get_example_icon_name" deprecated="1">
        <return-type type="char*" />
      </method>
      <method name="GetSearchPath" cname="gnome_icon_theme_get_search_path" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="char**" array="true" name="path" />
          <parameter type="int*" name="n_elements" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_icon_theme_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasIcon" cname="gnome_icon_theme_has_icon" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="icon_name" />
        </parameters>
      </method>
      <method name="ListIcons" cname="gnome_icon_theme_list_icons" deprecated="1">
        <return-type type="GList*" />
        <parameters>
          <parameter type="const-char*" name="context" />
        </parameters>
      </method>
      <method name="LookupIcon" cname="gnome_icon_theme_lookup_icon" deprecated="1">
        <return-type type="char*" />
        <parameters>
          <parameter type="const-char*" name="icon_name" />
          <parameter type="int" name="size" />
          <parameter type="const-GnomeIconData**" name="icon_data" />
          <parameter type="int*" name="base_size" />
        </parameters>
      </method>
      <constructor cname="gnome_icon_theme_new" deprecated="1" />
      <method name="PrependSearchPath" cname="gnome_icon_theme_prepend_search_path" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="path" />
        </parameters>
      </method>
      <method name="RescanIfNeeded" cname="gnome_icon_theme_rescan_if_needed" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="SetAllowSvg" cname="gnome_icon_theme_set_allow_svg" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="allow_svg" />
        </parameters>
      </method>
      <method name="SetCustomTheme" cname="gnome_icon_theme_set_custom_theme" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="theme_name" />
        </parameters>
      </method>
      <method name="SetSearchPath" cname="gnome_icon_theme_set_search_path" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" array="true" name="path" />
          <parameter type="int" name="n_elements" />
        </parameters>
      </method>
    </object>
    <object name="PasswordDialog" cname="GnomePasswordDialog" parent="GtkDialog">
      <field name="Details" cname="details" type="GnomePasswordDialogDetails*" />
      <property name="ShowUsername" cname="show-username" type="gboolean" readable="true" writeable="true" />
      <property name="ShowDomain" cname="show-domain" type="gboolean" readable="true" writeable="true" />
      <property name="ShowPassword" cname="show-password" type="gboolean" readable="true" writeable="true" />
      <property name="ShowNewPassword" cname="show-new-password" type="gboolean" readable="true" writeable="true" />
      <property name="ShowNewPasswordQuality" cname="show-new-password-quality" type="gboolean" readable="true" writeable="true" />
      <property name="ShowUserpassButtons" cname="show-userpass-buttons" type="gboolean" readable="true" writeable="true" />
      <property name="ShowRemember" cname="show-remember" type="gboolean" readable="true" writeable="true" />
      <property name="ReadonlyUsername" cname="readonly-username" type="gboolean" readable="true" writeable="true" />
      <property name="ReadonlyDomain" cname="readonly-domain" type="gboolean" readable="true" writeable="true" />
      <property name="Anonymous" cname="anonymous" type="gboolean" readable="true" writeable="true" />
      <property name="RememberMode" cname="remember-mode" type="GnomePasswordDialogRemember" readable="true" writeable="true" />
      <property name="Message" cname="message" type="gchar*" readable="true" writeable="true" />
      <property name="MessageMarkup" cname="message-markup" type="gchar*" readable="true" writeable="true" />
      <property name="Username" cname="username" type="gchar*" readable="true" writeable="true" />
      <property name="Domain" cname="domain" type="gchar*" readable="true" writeable="true" />
      <property name="Password" cname="password" type="gchar*" readable="true" writeable="true" />
      <property name="NewPassword" cname="new-password" type="gchar*" readable="true" writeable="true" />
      <method name="AnonSelected" cname="gnome_password_dialog_anon_selected">
        <return-type type="gboolean" />
      </method>
      <method name="GetDomain" cname="gnome_password_dialog_get_domain">
        <return-type type="char*" />
      </method>
      <method name="GetNewPassword" cname="gnome_password_dialog_get_new_password">
        <return-type type="char*" />
      </method>
      <method name="GetPassword" cname="gnome_password_dialog_get_password">
        <return-type type="char*" />
      </method>
      <method name="GetRemember" cname="gnome_password_dialog_get_remember">
        <return-type type="GnomePasswordDialogRemember" />
      </method>
      <method name="GetType" cname="gnome_password_dialog_get_type" shared="true">
        <return-type type="GtkType" />
      </method>
      <method name="GetUsername" cname="gnome_password_dialog_get_username">
        <return-type type="char*" />
      </method>
      <constructor cname="gnome_password_dialog_new">
        <parameters>
          <parameter type="const-char*" name="dialog_title" />
          <parameter type="const-char*" name="message" />
          <parameter type="const-char*" name="username" />
          <parameter type="const-char*" name="password" />
          <parameter type="gboolean" name="readonly_username" />
        </parameters>
      </constructor>
      <method name="RunAndBlock" cname="gnome_password_dialog_run_and_block">
        <return-type type="gboolean" />
      </method>
      <method name="SetDomain" cname="gnome_password_dialog_set_domain">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="domain" />
        </parameters>
      </method>
      <method name="SetNewPassword" cname="gnome_password_dialog_set_new_password">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="password" />
        </parameters>
      </method>
      <method name="SetPassword" cname="gnome_password_dialog_set_password">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="password" />
        </parameters>
      </method>
      <method name="SetPasswordQualityFunc" cname="gnome_password_dialog_set_password_quality_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomePasswordDialogQualityFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="dnotify" />
        </parameters>
      </method>
      <method name="SetReadonlyDomain" cname="gnome_password_dialog_set_readonly_domain">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="readonly" />
        </parameters>
      </method>
      <method name="SetReadonlyUsername" cname="gnome_password_dialog_set_readonly_username">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="readonly" />
        </parameters>
      </method>
      <method name="SetRemember" cname="gnome_password_dialog_set_remember">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomePasswordDialogRemember" name="remember" />
        </parameters>
      </method>
      <method name="SetShowDomain" cname="gnome_password_dialog_set_show_domain">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show" />
        </parameters>
      </method>
      <method name="SetShowNewPassword" cname="gnome_password_dialog_set_show_new_password">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show" />
        </parameters>
      </method>
      <method name="SetShowNewPasswordQuality" cname="gnome_password_dialog_set_show_new_password_quality">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show" />
        </parameters>
      </method>
      <method name="SetShowPassword" cname="gnome_password_dialog_set_show_password">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show" />
        </parameters>
      </method>
      <method name="SetShowRemember" cname="gnome_password_dialog_set_show_remember">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_remember" />
        </parameters>
      </method>
      <method name="SetShowUsername" cname="gnome_password_dialog_set_show_username">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show" />
        </parameters>
      </method>
      <method name="SetShowUserpassButtons" cname="gnome_password_dialog_set_show_userpass_buttons">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_userpass_buttons" />
        </parameters>
      </method>
      <method name="SetUsername" cname="gnome_password_dialog_set_username">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="username" />
        </parameters>
      </method>
    </object>
    <object name="PixmapEntry" cname="GnomePixmapEntry" deprecated="1" parent="GnomeFileEntry">
      <field name="Priv" cname="_priv" type="GnomePixmapEntryPrivate*" />
      <property name="DoPreview" cname="do_preview" type="gboolean" readable="true" writeable="true" />
      <method name="Construct" cname="gnome_pixmap_entry_construct" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="history_id" />
          <parameter type="const-gchar*" name="browse_dialog_title" />
          <parameter type="gboolean" name="do_preview" />
        </parameters>
      </method>
      <method name="GetFilename" cname="gnome_pixmap_entry_get_filename">
        <return-type type="gchar*" />
      </method>
      <method name="GetType" cname="gnome_pixmap_entry_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GnomeEntry" cname="gnome_pixmap_entry_gnome_entry" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GnomeFileEntry" cname="gnome_pixmap_entry_gnome_file_entry" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GtkEntry" cname="gnome_pixmap_entry_gtk_entry" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <constructor cname="gnome_pixmap_entry_new" deprecated="1">
        <parameters>
          <parameter type="const-gchar*" name="history_id" />
          <parameter type="const-gchar*" name="browse_dialog_title" />
          <parameter type="gboolean" name="do_preview" />
        </parameters>
      </constructor>
      <method name="PreviewWidget" cname="gnome_pixmap_entry_preview_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="ScrolledWindow" cname="gnome_pixmap_entry_scrolled_window">
        <return-type type="GtkWidget*" />
      </method>
      <method name="SetPixmapSubdir" cname="gnome_pixmap_entry_set_pixmap_subdir" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="subdir" />
        </parameters>
      </method>
      <method name="SetPreview" cname="gnome_pixmap_entry_set_preview">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="do_preview" />
        </parameters>
      </method>
      <method name="SetPreviewSize" cname="gnome_pixmap_entry_set_preview_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="preview_w" />
          <parameter type="gint" name="preview_h" />
        </parameters>
      </method>
    </object>
    <object name="Scores" cname="GnomeScores" deprecated="1" parent="GtkDialog">
      <field name="Priv" cname="_priv" type="GnomeScoresPrivate*" />
      <method name="Construct" cname="gnome_scores_construct" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_scores" />
          <parameter type="gchar**" name="names" />
          <parameter type="gfloat*" name="scores" />
          <parameter type="time_t*" name="times" />
          <parameter type="gboolean" name="clear" />
        </parameters>
      </method>
      <method name="Display" cname="gnome_scores_display" deprecated="1" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="const-gchar*" name="app_name" />
          <parameter type="/*" name="Name" />
          <parameter type="as" name="in" />
          <parameter type="int" name="pos" />
          <parameter type="as" name="returned" />
        </parameters>
      </method>
      <method name="DisplayWithPixmap" cname="gnome_scores_display_with_pixmap" deprecated="1" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="pixmap_logo" />
          <parameter type="const-gchar*" name="app_name" />
          <parameter type="const-gchar*" name="level" />
          <parameter type="int" name="pos" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_scores_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gnome_scores_new" deprecated="1">
        <parameters>
          <parameter type="guint" name="n_scores" />
          <parameter type="gchar**" name="names" />
          <parameter type="gfloat*" name="scores" />
          <parameter type="time_t*" name="times" />
          <parameter type="gboolean" name="clear" />
        </parameters>
      </constructor>
      <method name="SetColor" cname="gnome_scores_set_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n" />
          <parameter type="GdkColor*" name="col" />
        </parameters>
      </method>
      <method name="SetColors" cname="gnome_scores_set_colors" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="col" />
        </parameters>
      </method>
      <method name="SetCurrentPlayer" cname="gnome_scores_set_current_player" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="SetDefColor" cname="gnome_scores_set_def_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="col" />
        </parameters>
      </method>
      <method name="SetLogoLabel" cname="gnome_scores_set_logo_label" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="txt" />
          <parameter type="const-gchar*" name="font" />
          <parameter type="GdkColor*" name="col" />
        </parameters>
      </method>
      <method name="SetLogoLabelTitle" cname="gnome_scores_set_logo_label_title" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="txt" />
        </parameters>
      </method>
      <method name="SetLogoPixmap" cname="gnome_scores_set_logo_pixmap" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="pix_name" />
        </parameters>
      </method>
      <method name="SetLogoWidget" cname="gnome_scores_set_logo_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="w" />
        </parameters>
      </method>
    </object>
    <object name="ThumbnailFactory" cname="GnomeThumbnailFactory" parent="GObject">
      <field name="Priv" cname="priv" type="GnomeThumbnailFactoryPrivate*" />
      <method name="CanThumbnail" cname="gnome_thumbnail_factory_can_thumbnail">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="const-char*" name="mime_type" />
          <parameter type="time_t" name="mtime" />
        </parameters>
      </method>
      <method name="CreateFailedThumbnail" cname="gnome_thumbnail_factory_create_failed_thumbnail">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="time_t" name="mtime" />
        </parameters>
      </method>
      <method name="GenerateThumbnail" cname="gnome_thumbnail_factory_generate_thumbnail">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="const-char*" name="mime_type" />
        </parameters>
      </method>
      <method name="GetType" cname="gnome_thumbnail_factory_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasValidFailedThumbnail" cname="gnome_thumbnail_factory_has_valid_failed_thumbnail">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="time_t" name="mtime" />
        </parameters>
      </method>
      <method name="Lookup" cname="gnome_thumbnail_factory_lookup">
        <return-type type="char*" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="time_t" name="mtime" />
        </parameters>
      </method>
      <constructor cname="gnome_thumbnail_factory_new">
        <parameters>
          <parameter type="GnomeThumbnailSize" name="size" />
        </parameters>
      </constructor>
      <method name="SaveThumbnail" cname="gnome_thumbnail_factory_save_thumbnail">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="thumbnail" />
          <parameter type="const-char*" name="uri" />
          <parameter type="time_t" name="original_mtime" />
        </parameters>
      </method>
    </object>
    <struct name="AppBarMsg" cname="GnomeAppBarMsg" opaque="true" />
    <struct name="GdkPixbufAsyncHandle" cname="GnomeGdkPixbufAsyncHandle" opaque="true" />
    <struct name="IconData" cname="GnomeIconData">
      <field name="HasEmbeddedRect" cname="has_embedded_rect" type="gboolean" />
      <field name="X0" cname="x0" type="int" />
      <field name="Y0" cname="y0" type="int" />
      <field name="X1" cname="x1" type="int" />
      <field name="Y1" cname="y1" type="int" />
      <field name="AttachPoints" cname="attach_points" type="GnomeIconDataPoint*" />
      <field name="NAttachPoints" cname="n_attach_points" type="int" />
      <field name="DisplayName" cname="display_name" type="char*" />
      <method name="Dup" cname="gnome_icon_data_dup" deprecated="1">
        <return-type type="GnomeIconData*" />
      </method>
      <method name="Free" cname="gnome_icon_data_free" deprecated="1">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="IconDataPoint" cname="GnomeIconDataPoint">
      <field name="X" cname="x" type="int" />
      <field name="Y" cname="y" type="int" />
    </struct>
    <struct name="PasswordDialogDetails" cname="GnomePasswordDialogDetails" opaque="true" />
    <struct name="ThemeFile" cname="GnomeThemeFile" opaque="true">
      <method name="ForeachKey" cname="gnome_theme_file_foreach_key" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="section" />
          <parameter type="gboolean" name="include_localized" />
          <parameter type="GnomeThemeFileLineFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="ForeachSection" cname="gnome_theme_file_foreach_section" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeThemeFileSectionFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="Free" cname="gnome_theme_file_free" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetInteger" cname="gnome_theme_file_get_integer" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="section" />
          <parameter type="const-char*" name="keyname" />
          <parameter type="int*" name="val" />
        </parameters>
      </method>
      <method name="GetLocaleString" cname="gnome_theme_file_get_locale_string" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="section" />
          <parameter type="const-char*" name="keyname" />
          <parameter type="char**" name="val" />
        </parameters>
      </method>
      <method name="GetRaw" cname="gnome_theme_file_get_raw" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="section" />
          <parameter type="const-char*" name="keyname" />
          <parameter type="const-char*" name="locale" />
          <parameter type="char**" name="val" />
        </parameters>
      </method>
      <method name="GetString" cname="gnome_theme_file_get_string" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="section" />
          <parameter type="const-char*" name="keyname" />
          <parameter type="char**" name="val" />
        </parameters>
      </method>
      <constructor cname="gnome_theme_file_new_from_string" deprecated="1">
        <parameters>
          <parameter type="char*" name="data" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="ParseErrorQuark" cname="gnome_theme_file_parse_error_quark" deprecated="1" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="ToString" cname="gnome_theme_file_to_string" deprecated="1">
        <return-type type="char*" />
      </method>
    </struct>
    <struct name="UIBuilderData" cname="GnomeUIBuilderData">
      <field name="ConnectFunc" cname="connect_func" type="GnomeUISignalConnectFunc" />
      <field name="Data" cname="data" type="gpointer" />
      <field name="IsInterp" cname="is_interp" type="gboolean" />
      <field name="RelayFunc" cname="relay_func" type="GtkCallbackMarshal" />
      <field name="DestroyFunc" cname="destroy_func" type="GtkDestroyNotify" />
    </struct>
    <struct name="UIInfo" cname="GnomeUIInfo">
      <field name="Type" cname="type" type="GnomeUIInfoType" />
      <field name="Label" cname="label" type="const-gchar*" />
      <field name="Hint" cname="hint" type="const-gchar*" />
      <field name="Moreinfo" cname="moreinfo" type="gpointer" />
      <field name="UserData" cname="user_data" type="gpointer" />
      <field name="UnusedData" cname="unused_data" type="gpointer" />
      <field name="PixmapType" cname="pixmap_type" type="GnomeUIPixmapType" />
      <field name="PixmapInfo" cname="pixmap_info" type="gconstpointer" />
      <field name="AcceleratorKey" cname="accelerator_key" type="guint" />
      <field name="AcMods" cname="ac_mods" type="GdkModifierType" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
    </struct>
    <class name="Global" cname="GnomeGlobal">
      <method name="AcceleratorsSync" cname="gnome_accelerators_sync" shared="true">
        <return-type type="void" />
      </method>
      <method name="IceInit" cname="gnome_ice_init" shared="true">
        <return-type type="void" />
      </method>
      <method name="InitWithPoptTable" cname="gnome_init_with_popt_table" deprecated="1" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="app_id" />
          <parameter type="const-char*" name="app_version" />
          <parameter type="int" name="argc" />
          <parameter type="char**" name="argv" />
          <parameter type="poptOption*" name="options" />
          <parameter type="int" name="flags" />
          <parameter type="poptContext*" name="return_ctx" />
        </parameters>
      </method>
      <method name="InteractionKeyReturn" cname="gnome_interaction_key_return" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="key" />
          <parameter type="gboolean" name="cancel_shutdown" />
        </parameters>
      </method>
      <method name="MasterClient" cname="gnome_master_client" shared="true">
        <return-type type="GnomeClient*" />
      </method>
      <method name="MdiModeGetType" cname="gnome_mdi_mode_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="TypeInit" cname="gnome_type_init" shared="true">
        <return-type type="void" />
      </method>
      <method name="UrlShowOnScreen" cname="gnome_url_show_on_screen" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="url" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </class>
    <class name="Authentication" cname="GnomeAuthentication_">
      <method name="ManagerDialogIsVisible" cname="gnome_authentication_manager_dialog_is_visible" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="ManagerInit" cname="gnome_authentication_manager_init" shared="true">
        <return-type type="void" />
      </method>
    </class>
    <class name="Gdk" cname="GnomeGdk_">
      <method name="PixbufNewFromUri" cname="gnome_gdk_pixbuf_new_from_uri" shared="true">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
      <method name="PixbufNewFromUriAsync" cname="gnome_gdk_pixbuf_new_from_uri_async" shared="true">
        <return-type type="GnomeGdkPixbufAsyncHandle*" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="GnomeGdkPixbufLoadCallback" name="load_callback" />
          <parameter type="GnomeGdkPixbufDoneCallback" name="done_callback" />
          <parameter type="gpointer" name="callback_data" />
        </parameters>
      </method>
      <method name="PixbufNewFromUriAtScale" cname="gnome_gdk_pixbuf_new_from_uri_at_scale" shared="true">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gboolean" name="preserve_aspect_ratio" />
        </parameters>
      </method>
      <method name="PixbufNewFromUriCancel" cname="gnome_gdk_pixbuf_new_from_uri_cancel" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GnomeGdkPixbufAsyncHandle*" name="handle" />
        </parameters>
      </method>
    </class>
    <class name="Gtk" cname="GnomeGtk_">
      <method name="ModuleInfoGet" cname="gnome_gtk_module_info_get" shared="true">
        <return-type type="const-GnomeModuleInfo*" />
      </method>
      <method name="WidgetAddPopupItems" cname="gnome_gtk_widget_add_popup_items" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
    </class>
    <class name="Help" cname="GnomeHelp_">
      <method name="DisplayDesktopOnScreen" cname="gnome_help_display_desktop_on_screen" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeProgram*" name="program" />
          <parameter type="const-char*" name="doc_id" />
          <parameter type="const-char*" name="file_name" />
          <parameter type="const-char*" name="link_id" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayOnScreen" cname="gnome_help_display_on_screen" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="file_name" />
          <parameter type="const-char*" name="link_id" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayUriOnScreen" cname="gnome_help_display_uri_on_screen" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="help_uri" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DisplayWithDocIdOnScreen" cname="gnome_help_display_with_doc_id_on_screen" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GnomeProgram*" name="program" />
          <parameter type="const-char*" name="doc_id" />
          <parameter type="const-char*" name="file_name" />
          <parameter type="const-char*" name="link_id" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </class>
    <class name="Icon" cname="GnomeIcon_">
      <method name="Lookup" cname="gnome_icon_lookup" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="GtkIconTheme*" name="icon_theme" />
          <parameter type="GnomeThumbnailFactory*" name="thumbnail_factory" />
          <parameter type="const-char*" name="file_uri" />
          <parameter type="const-char*" name="custom_icon" />
          <parameter type="GnomeVFSFileInfo*" name="file_info" />
          <parameter type="const-char*" name="mime_type" />
          <parameter type="GnomeIconLookupFlags" name="flags" />
          <parameter type="GnomeIconLookupResultFlags*" name="result" />
        </parameters>
      </method>
      <method name="LookupSync" cname="gnome_icon_lookup_sync" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="GtkIconTheme*" name="icon_theme" />
          <parameter type="GnomeThumbnailFactory*" name="thumbnail_factory" />
          <parameter type="const-char*" name="file_uri" />
          <parameter type="const-char*" name="custom_icon" />
          <parameter type="GnomeIconLookupFlags" name="flags" />
          <parameter type="GnomeIconLookupResultFlags*" name="result" />
        </parameters>
      </method>
    </class>
    <class name="Popup" cname="GnomePopup_">
      <method name="MenuAppend" cname="gnome_popup_menu_append" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="popup" />
          <parameter type="GnomeUIInfo*" name="uiinfo" />
        </parameters>
      </method>
      <method name="MenuAttach" cname="gnome_popup_menu_attach" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="popup" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="MenuDoPopup" cname="gnome_popup_menu_do_popup" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="popup" />
          <parameter type="GtkMenuPositionFunc" name="pos_func" />
          <parameter type="gpointer" name="pos_data" />
          <parameter type="GdkEventButton*" name="event" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GtkWidget*" name="for_widget" />
        </parameters>
      </method>
      <method name="MenuDoPopupModal" cname="gnome_popup_menu_do_popup_modal" deprecated="1" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="GtkWidget*" name="popup" />
          <parameter type="GtkMenuPositionFunc" name="pos_func" />
          <parameter type="gpointer" name="pos_data" />
          <parameter type="GdkEventButton*" name="event" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GtkWidget*" name="for_widget" />
        </parameters>
      </method>
      <method name="MenuGetAccelGroup" cname="gnome_popup_menu_get_accel_group" deprecated="1" shared="true">
        <return-type type="GtkAccelGroup*" />
        <parameters>
          <parameter type="GtkMenu*" name="menu" />
        </parameters>
      </method>
      <method name="MenuNew" cname="gnome_popup_menu_new" deprecated="1" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
        </parameters>
      </method>
      <method name="MenuNewWithAccelgroup" cname="gnome_popup_menu_new_with_accelgroup" deprecated="1" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GnomeUIInfo*" name="uiinfo" />
          <parameter type="GtkAccelGroup*" name="accelgroup" />
        </parameters>
      </method>
    </class>
    <class name="Thumbnail" cname="GnomeThumbnail_">
      <method name="HasUri" cname="gnome_thumbnail_has_uri" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
      <method name="IsValid" cname="gnome_thumbnail_is_valid" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="const-char*" name="uri" />
          <parameter type="time_t" name="mtime" />
        </parameters>
      </method>
      <method name="Md5" cname="gnome_thumbnail_md5" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
      <method name="PathForUri" cname="gnome_thumbnail_path_for_uri" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="GnomeThumbnailSize" name="size" />
        </parameters>
      </method>
      <method name="ScaleDownPixbuf" cname="gnome_thumbnail_scale_down_pixbuf" shared="true">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
        </parameters>
      </method>
    </class>
    <class name="Window" cname="GnomeWindow_">
      <method name="IconInit" cname="gnome_window_icon_init" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="IconSetDefaultFromFile" cname="gnome_window_icon_set_default_from_file" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="IconSetDefaultFromFileList" cname="gnome_window_icon_set_default_from_file_list" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char**" name="filenames" />
        </parameters>
      </method>
      <method name="IconSetFromDefault" cname="gnome_window_icon_set_from_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="w" />
        </parameters>
      </method>
      <method name="IconSetFromFile" cname="gnome_window_icon_set_from_file" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="w" />
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="IconSetFromFileList" cname="gnome_window_icon_set_from_file_list" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="w" />
          <parameter type="const-char**" name="filenames" />
        </parameters>
      </method>
      <method name="ToplevelSetTitle" cname="gnome_window_toplevel_set_title" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
          <parameter type="const-gchar*" name="doc_name" />
          <parameter type="const-gchar*" name="app_name" />
          <parameter type="const-gchar*" name="extension" />
        </parameters>
      </method>
    </class>
    <object name="Stock" cname="GnomeStock">
      <static-string cname="GNOME_STOCK_ABOUT" name="About" value="gnome-stock-about" />
      <static-string cname="GNOME_STOCK_ATTACH" name="Attach" value="gnome-stock-attach" />
      <static-string cname="GNOME_STOCK_AUTHENTICATION" name="Authentication" value="gnome-stock-authentication" />
      <static-string cname="GNOME_STOCK_BLANK" name="Blank" value="gnome-stock-blank" />
      <static-string cname="GNOME_STOCK_BOOK_BLUE" name="BookBlue" value="gnome-stock-book-blue" />
      <static-string cname="GNOME_STOCK_BOOK_GREEN" name="BookGreen" value="gnome-stock-book-green" />
      <static-string cname="GNOME_STOCK_BOOK_OPEN" name="BookOpen" value="gnome-stock-book-open" />
      <static-string cname="GNOME_STOCK_BOOK_RED" name="BookRed" value="gnome-stock-book-red" />
      <static-string cname="GNOME_STOCK_BOOK_YELLOW" name="BookYellow" value="gnome-stock-book-yellow" />
      <static-string cname="GNOME_STOCK_LINE_IN" name="LineIn" value="gnome-stock-line-in" />
      <static-string cname="GNOME_STOCK_MAIL" name="Mail" value="gnome-stock-mail" />
      <static-string cname="GNOME_STOCK_MAIL_FWD" name="MailFwd" value="gnome-stock-mail-fwd" />
      <static-string cname="GNOME_STOCK_MAIL_NEW" name="MailNew" value="gnome-stock-mail-new" />
      <static-string cname="GNOME_STOCK_MAIL_RCV" name="MailRcv" value="gnome-stock-mail-rcv" />
      <static-string cname="GNOME_STOCK_MAIL_RPL" name="MailRpl" value="gnome-stock-mail-rpl" />
      <static-string cname="GNOME_STOCK_MAIL_SND" name="MailSnd" value="gnome-stock-mail-snd" />
      <static-string cname="GNOME_STOCK_MIC" name="Mic" value="gnome-stock-mic" />
      <static-string cname="GNOME_STOCK_MIDI" name="Midi" value="gnome-stock-midi" />
      <static-string cname="GNOME_STOCK_MULTIPLE_FILE" name="MultipleFile" value="gnome-stock-multiple-file" />
      <static-string cname="GNOME_STOCK_NOT" name="Not" value="gnome-stock-not" />
      <static-string cname="GNOME_STOCK_SCORES" name="Scores" value="gnome-stock-scores" />
      <static-string cname="GNOME_STOCK_TABLE_BORDERS" name="TableBorders" value="gnome-stock-table-borders" />
      <static-string cname="GNOME_STOCK_TABLE_FILL" name="TableFill" value="gnome-stock-table-fill" />
      <static-string cname="GNOME_STOCK_TEXT_BULLETED_LIST" name="TextBulletedList" value="gnome-stock-text-bulleted-list" />
      <static-string cname="GNOME_STOCK_TEXT_INDENT" name="TextIndent" value="gnome-stock-text-indent" />
      <static-string cname="GNOME_STOCK_TEXT_NUMBERED_LIST" name="TextNumberedList" value="gnome-stock-text-numbered-list" />
      <static-string cname="GNOME_STOCK_TEXT_UNINDENT" name="TextUnindent" value="gnome-stock-text-unindent" />
      <static-string cname="GNOME_STOCK_TIMER" name="Timer" value="gnome-stock-timer" />
      <static-string cname="GNOME_STOCK_TIMER_STOP" name="TimerStop" value="gnome-stock-timer-stop" />
      <static-string cname="GNOME_STOCK_TRASH" name="Trash" value="gnome-stock-trash" />
      <static-string cname="GNOME_STOCK_TRASH_FULL" name="TrashFull" value="gnome-stock-trash-full" />
      <static-string cname="GNOME_STOCK_VOLUME" name="Volume" value="gnome-stock-volume" />
    </object>
  </namespace>
</api>